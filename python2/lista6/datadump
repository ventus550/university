['Welcome to Python.org', 'Python', '▲ The Python Network', 'Python Brochure', 'Python Books', 'Python Essays', 'Python Conferences', 'Python Logo', 'Python Wiki', 'Python News', 'Python Events', 'Python Events Archive', '# Python 3: Fibonacci series up to n\r', 'The core of extensible programming is defining functions. Python allows mandatory and optional arguments, keyword arguments, and even arbitrary argument lists. More about defining functions in Python\xa03', '# Python 3: List comprehensions\r', 'Lists (known as arrays in other languages) are one of the compound data types that Python understands. Lists can be indexed, sliced and manipulated with other built-in functions. More about lists in Python\xa03', '# Python 3: Simple arithmetic\r', 'Calculations are simple with Python, and expression syntax is straightforward: the operators +, -, * and / work as expected; parentheses () can be used for grouping. More about simple math functions in Python\xa03.', '# Python 3: Simple output (with Unicode)\r', '>>> print("Hello, I\'m Python!")\r', "Hello, I'm Python!\r", 'Python\r', 'Hi, Python.', 'Experienced programmers in any other language can pick up Python very quickly, and beginners find the clean syntax and indentation structure easy to learn. Whet your appetite with our Python\xa03 overview.', 'Python knows the usual control flow statements that other languages speak — if, for, while and range — with some of its own twists, of course. More control flow tools in Python\xa03', 'Python is a programming language that lets you work quickly and integrate systems more effectively. Learn More', 'Participate in the official 2021 Python Developers Survey \xa0\xa0Take the 2021 survey!', "Whether you're new to programming or an experienced developer, it's easy to learn and use Python.", 'Python source code and installers are available for download for all versions!', 'Latest: Python 3.10.0', "Documentation for Python's standard library, along with tutorials and guides, are available online.", "Looking for work or have a Python related position that you're trying to hire for? Our relaunched community-run job board is the place to go.", 'Python Software Foundation - November 2021 Newsletter', 'Python 3.9.9 hotfix release is now available', 'Xtreme Python', "Python's convenience has made it the most popular language for machine learning and artificial intelligence. Python's flexibility has allowed Anyscale to make ML/AI scalable from laptops to clusters.", 'Python provides convenience and flexibility for scalable ML/AI by Dean Wampler', 'Use Python for…', '        tkInter, PyGObject, PyQt, PySide, Kivy, wxPython', 'SciPy, Pandas, IPython', '>>> Python Enhancement Proposals (PEPs): The future of Python is discussed here.', '>>> Python Software Foundation', 'The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers. Learn more ', 'Python Brochure', 'Python Books', 'Python Essays', 'Python Conferences', 'Python Logo', 'Python Wiki', 'Python News', 'Python Events', 'Python Events Archive', '                            \xa0Python Software Foundation']
['Python 3.11 (in development)', 'Python 3.10 (stable)', 'Python 3.9 (stable)', 'Python 3.8 (security-fixes)', 'Python 3.7 (security-fixes)', 'Python 3.6 (security-fixes)', 'Python 3.5 (EOL)', 'Python 2.7 (EOL)', 'Python Developer’s Guide', 'Python »', 'Python 3.10.0 documentation', '  Welcome! This is the official documentation for Python 3.10.0.', "What's new in Python 3.10?", 'Python Setup and Usage', 'how to use Python on different platforms', 'Python HOWTOs', 'Installing Python Modules', 'installing from the Python Package Index & other sources', 'Distributing Python Modules', 'Python/C API', 'History and License of Python', 'Python 3.11 (in development)', 'Python 3.10 (stable)', 'Python 3.9 (stable)', 'Python 3.8 (security-fixes)', 'Python 3.7 (security-fixes)', 'Python 3.6 (security-fixes)', 'Python 3.5 (EOL)', 'Python 2.7 (EOL)', 'Python Developer’s Guide', 'Python »', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['PyPI · The Python Package Index', 'Find, install and publish Python packages with the Python Package Index', 'The Python Package Index (PyPI) is a repository of software for the Python programming language.', '        PyPI helps you find and install software developed and shared by the Python community.', '        Learn how to package your Python code for PyPI.', 'The AWS SDK for Python', '          Developed and maintained by the Python community, for the Python community.', '© 2021 Python Software Foundation']
['The Python Software Foundation is a 501(c)(3) non-profit organization dedicated to the Python programming language.', 'Your donation helps sustain a vibrant and diverse Python community and shows your support for Open Source. We rely on memberships, individual donations,\xa0and corporate sponsorships to award grants for regional Python conferences, sprints, local Meetups, and other community events, as well as to support Python documentation, fiscal sponsorships, and community projects such as:', "Python Developer's Guide", 'PyPI - the Python Package Index', 'What does the Python Software Foundation do?', 'The PSF holds and protects the trademarks behind the Python programming language including Python, PyCon, and PyPI .\xa0', 'Python in Education sets funding targets for (1) resources (curriculums, evaluations, studies, multidisciplinary projects), (2) localization (primarily translations), and (3) mobile (development on mobile devices).', 'The PSF supports 11 fiscal sponsorees including local user groups, regional conferences, and Python projects; the PSF provides a nonprofit structure and back-end resources. ', 'Acknowledged Python contributors with quarterly Community Service Awards, honoring individuals who support our mission. See more on our blog: http:// pyfound.blogspot.com/', 'Thank you for supporting the Python Software Foundation!']
['Python - Strona główna | Facebook', "Przejdź doSekcje tej stronyPomoc w zakresie dostępnościFacebookAdres e-mail lub numer telefonuHasłoNie pamiętasz nazwy konta?Strona głównaInformacjeZdjęciaPostySpołecznośćZobacz więcej postów strony Python na FacebookuZaloguj sięlubUtwórz nowe kontoZobacz więcej postów strony Python na FacebookuZaloguj sięNie pamiętasz nazwy konta?lubUtwórz nowe kontoNie terazSpołecznośćZobacz wszystko159\xa0543 osoby lubią to165\xa0087 użytkowników obserwuje toInformacjeZobacz wszystkieSkontaktuj się ze stroną Python w Messengerzewww.python.orgZainteresowanieTransparentność stronyWyświetl więcejFacebook przedstawia informacje, dzięki którym możesz lepiej się zorientować, jakim celom służy strona. Zobacz działania podjęte przez osoby, które zarządzają jej zawartością i ją publikują.Utworzenie strony – 16 grudnia 2007LudziePolubienia: 159\xa0543Powiązane stronyPython BeginnersStrona poświęcona edukacjiMachine Learning and AIEdukacjaPyCharmOprogramowanieJavaScript WeeklyZainteresowanieKivyOprogramowanieC#Szkoła pomaturalnaPython Easy - Python ProgrammingOprogramowanieDeepLearningOrganizacja non profitCyber SecurityFirma internetowaBUG BountyBlog osobistyLearn PythonEdukacjaFunny Cats and Dogs Videos.comKanał telewizyjnyHaunted Zombie FarmSztuka i rozrywkaAfterdarknessFotografia i produkcja filmówWorkDigitalKonsultant ds. badań rynkuFPGAworldOrganizacjaTryhackmeStrona poświęcona edukacjiIhtreek TechEdukacjaC++ZainteresowanieFacebook WatchFirma internetowaStrony polubione przez tę stronęPyLadiesPyATLStronyZainteresowaniePythonPolski · English (US) · ślōnskŏ gŏdka · Español · Português (Brasil)Informacje o danych w statystykach stronyPrywatność · Regulamin · Reklama · Opcje wyświetlania reklam · Pliki cookie · Więcej Meta © 2021PostyPython zaktualizował(a) swoje zdjęcie profilowe.14 lipca 2016 · Python10 marca 2014 · opensource.com recently covered the Google Summer of Code and GNOME Outreach Program for Women, both of which we're happily involved with! Check it out: http://opensource.com/life/14/3/google-summer-code-2014Mentoring organizations for Google Summer of Code 2014 share their plans for students and open source projects this year.opensource.comCoding internship summer program with Google | opensource.comMentoring organizations for Google Summer of Code 2014 share their plans for students and open source projects this year.Mentoring organizations for Google Summer of Code 2014 share their plans for students and open source projects this year.Zobacz wszystkieZobacz więcej"]
[]
['Get the Python Brochure Vol.1 as download! — ', '                    Get the Python Brochure Vol.1 as download!', 'The first run of the printed edition was successfully released in 2014 at the\xa0PyCon\xa0in Montreal. After that we distributed this excellent showcase of Python to major computing conferences around the world. We were proud to offer to ship the second print run until end of 2016. We have send all our copies to your local events and shows around Python over the whole world. Since then it is still a growing technology that powers the web and science & engineering in both education and production.', 'You can download the\xa0Python brochure as\xa0the latest updated screen resolution PDF\xa0suitable for electronic distribution and is well suited for low resolution printing on A4 as a A5 folded brochure booklet. The original printed issue was 32 pages, A4, full-color.', "Let's make Python strengths and quality more visible for new audiences!", "The Python Software Foundation (PSF) has collected success stories and case studies over the last two years and we've created a beautiful, professional quality printed brochure to promote the usage of Python to audiences which we are currently not reaching well.", '            Newsletter #9:  PSF Python Brochure: Get your free copy at PyCon 2015', '            Newsletter #8: PSF Python Brochure "sold out" - help us kick start the second print run !', '            Newsletter #7: The Python Brochure is out – Get your copy in Montreal!', '            Newsletter #6: PSF Python Brochure – Last call for Ad Sponsors', '            Newsletter #5 – Python Brochure available as PDF preview. Last chance to order your ad!', 'Python Software Foundation', 'Foundation at Python.org', 'PSF Python Brochure Vol. I final Download', '      Powered by Plone & Python']
['History and License — Python 3.10.0 documentation', 'Terms and conditions for accessing or otherwise using Python', 'Distributing Python Modules (Legacy version)', 'Python »', 'Python was created in the early 1990s by Guido van Rossum at Stichting', 'successor of a language called ABC.  Guido remains Python’s principal author,', 'In 1995, Guido continued his work on Python at the Corporation for National', 'In May 2000, Guido and the Python core development team moved to BeOpen.com to', 'form the BeOpen PythonLabs team.  In October of the same year, the PythonLabs', 'https://www.zope.org/).  In 2001, the Python Software Foundation (PSF, see', 'specifically to own Python-related Intellectual Property.  Zope Corporation is a', 'All Python releases are Open Source (see https://opensource.org/ for the Open', 'Source Definition). Historically, most, but not all, Python releases have also', 'GPL-compatible doesn’t mean that we’re distributing Python under the GPL.  All', 'Python licenses, unlike the GPL, let you distribute a modified version without', 'combine Python with other software that is released under the GPL; the others', 'Terms and conditions for accessing or otherwise using Python¶', 'Python software and documentation are licensed under the', 'Starting with Python 3.8.6, examples, recipes, and other code in', 'Some software incorporated into Python is under different licenses.', '1. This LICENSE AGREEMENT is between the Python Software Foundation ("PSF"), and', '   the Individual or Organization ("Licensee") accessing and otherwise using Python', '   distribute, and otherwise use Python 3.10.0 alone or in any derivative', '   copyright, i.e., "Copyright © 2001-2021 Python Software Foundation; All Rights', '   Reserved" are retained in Python 3.10.0 alone or in any derivative version', '   incorporates Python 3.10.0 or any part thereof, and wants to make the', '   agrees to include in any such work a brief summary of the changes made to Python', '4. PSF is making Python 3.10.0 available to Licensee on an "AS IS" basis.', '8. By copying, installing or otherwise using Python 3.10.0, Licensee agrees', '2. Subject to the terms and conditions of this BeOpen Python License Agreement,', '   version, provided, however, that the BeOpen Python License is retained in the', '   third party.  As an exception, the "BeOpen Python" logos available at', '   otherwise using Python 1.6.1 software in source or binary form and its', '   distribute, and otherwise use Python 1.6.1 alone or in any derivative version,', '   Rights Reserved" are retained in Python 1.6.1 alone or in any derivative version', '   Licensee may substitute the following text (omitting the quotes): "Python 1.6.1', '   Agreement.  This Agreement together with Python 1.6.1 may be located on the', '   incorporates Python 1.6.1 or any part thereof, and wants to make the derivative', '   include in any such work a brief summary of the changes made to Python 1.6.1.', '4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS" basis.  CNRI', '   Notwithstanding the foregoing, with regard to derivative works based on Python', '   or otherwise using Python 1.6.1, Licensee agrees to be bound by the terms and', 'for third-party software incorporated in the Python distribution.', 'Python 2.2 license.', 'Permission to use, copy, modify, and distribute this Python software and', '- Arguments more compliant with Python standard', 'The file Python/pyhash.c contains Marek Majkowski’ implementation of', 'The file Python/dtoa.c, which supplies C functions dtoa and', 'Python may include a copy of the OpenSSL libraries, so we include a copy', 'Terms and conditions for accessing or otherwise using Python', 'Distributing Python Modules (Legacy version)', 'Python »', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['BeginnersGuide - Python Wiki', "Beginner's Guide to Python", 'New to programming? Python is free and easy to learn if you know where to start! This guide will help you to get started quickly. Chinese Translation ', 'New to Python?', 'Read BeginnersGuide/Overview for a short explanation of what Python is. ', 'Getting Python', "Next, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. ", 'Learning Python', "Next, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume that you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Some sites offer in-browser coding for those who want to learn Python: please keep this list alphabetized Codecademy Coding Bootcamps DataCamp Dataquest for Python for data science. HackInScience free and open source platform. High School Technology Services for general Python Print a cheat sheet of the most important Python features and post it to your office wall until you know the basics well. Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. ", "Need help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. ", 'BeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/OverviewBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples', 'Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle CheckIO - Online learning, testing and improving your python skills After Hours Programming - Python Quiz Python Guru Quiz- Python Quiz Pyschools - A Collection of Python Quiz and Exercise Questions PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform CS Circles - online lessons and graded exercises ', 'Python Style Checker', 'Pythonchecker.com - An educative online tool to rate your Python style (with dynamic score computation and hints) ', 'Looking for a particular Python module or application?', 'The first place to look is the Python Package Index. If you can\'t find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. You may also try our external guest project, pydoc.net, for advanced package and module search. Next, try Google or another search engine of your choice. Searching for "python" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. ', 'Python-Related Cheat Sheets', 'Python: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets ', "Python is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation BeginnersGuide  (last edited 2020-07-04 14:00:41 by ChrisM)", 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
["Python Developer's Guide", "Python Developer's Guide ", "Python Developer's Guide ", 'Documenting Python', 'Following Python’s Development', 'Porting Python to a new platform', 'Changing the Python Language', 'Exploring CPython’s Internals', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Changing Python’s C API', 'Python Developer’s Guide¶', 'to Python – for both new and experienced contributors. It is', 'community that maintains Python.  We welcome your contributions to Python!', 'Fork the CPython repository', 'Build Python, on UNIX and Mac OS use:', 'contributing to Python:', 'PEPs (Python Enhancement Proposals)', 'Status of Python branches¶', 'The main branch is currently the future Python 3.11, and is the only', 'branch that accepts new features.  The latest release for each Python', 'but can be adjusted by the release manager of each branch.  All Python 2', 'We encourage everyone to contribute to Python and that’s why we have put up this', 'this guide, then the Core Python Mentorship group is available to help guide new', 'A number of individuals from the Python community have contributed to a series', 'Guide for contributing to Python:', 'Documenting Python', 'Following Python’s Development', 'contributors will build understanding of the CPython workflow by reading the', 'Proposing changes to Python itself¶', 'Improving Python’s code, documentation and tests are ongoing tasks that are', 'never going to be “finished”, as Python operates as part of an ever-evolving', 'necessary maintenance activities is finding ways to make Python, in the form of', 'Changing the Python Language', 'This guide is specifically for contributing to the Python reference interpreter,', 'also known as CPython (while most of the standard library is written in Python,', 'There are other Python implementations, each with a different focus.  Like', 'CPython, they always have more things they would like to do than they have', 'PyPy: A Python interpreter focused on high speed (JIT-compiled) operation', 'Jython: A Python interpreter focused on good integration with the Java', 'IronPython: A Python interpreter focused on good integration with the', 'Stackless: A Python interpreter focused on providing lightweight', 'microthreads while remaining largely compatible with CPython specific', 'PEP 8 (Style Guide for Python Code)', 'PEPs (Python Enhancement Proposals)', 'Exploring CPython’s Internals', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Python Software Foundation-supported', 'which includes all infrastructure used in the development of Python itself', 'Python Documentation', 'Documenting Python', 'Python triage team', 'Becoming a member of the Python triage team', 'Following Python’s Development', 'Porting Python to a new platform', 'Updating NEWS and What’s New in Python', 'Changing the Python Language', 'Exploring CPython’s Internals', 'CPython Source Code Layout', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Changing Python’s C API', 'Python Build Setup', 'Building Python', 'Forking CPython GitHub Repository', 'Cloning a Forked CPython Repository', 'Updating your CPython Fork', 'Documenting Python and style guide', '              Copyright © 2011-2021, Python Software Foundation |', 'Python Developer’s Guide', 'Status of Python branches', 'Proposing changes to Python itself']
['Python Frequently Asked Questions — Python 3.10.0 documentation', 'General Python FAQ', 'Python »', 'Python Frequently Asked Questions', 'Python Frequently Asked Questions¶', 'General Python FAQ', 'Python on Windows FAQ', '“Why is Python Installed on my Computer?” FAQ', 'General Python FAQ', 'Python »', 'Python Frequently Asked Questions', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['Languages - Python Wiki', "Attempt to have languages and links listed in the native tongue of the user. 2009-09-01 This page's links go to the various languages' pages, most of which have been copied from the other set of language pages, with a few updates.  Ideally, all the pages should be like the Polish or Turkish pages - all native language, only the necessary English. There are some groundrules, some laid down by the site admins, some my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). ", 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['PEP 0 -- Index of Python Enhancement Proposals (PEPs) | Python.org', 'Python', '▲ The Python Network', 'Python Brochure', 'Python Books', 'Python Essays', 'Python Conferences', 'Python Logo', 'Python Wiki', 'Python News', 'Python Events', 'Python Events Archive', 'Python>>>', "Python Developer's Guide>>>", 'PEP 0 -- Index of Python Enhancement Proposals (PEPs)', 'PEP 0 -- Index of Python Enhancement Proposals (PEPs)', 'Title:Index of Python Enhancement Proposals (PEPs)', 'This PEP contains the index of all Python Enhancement Proposals,', 'Style Guide for Python Code', 'Python Language Governance', 'The Zen of Python', 'Doing Python Releases 101', 'Python Database API Specification v1.0', 'Python Database API Specification v2.0', 'Backward Compatibility for the Python 2 Standard ...', 'Python Web Server Gateway Interface v1.0', 'Pure Python/C Accelerator Module Compatibility ...', 'Python 2.8 Un-release Schedule', 'Provisional packages in the Python standard library', 'Migrating to Python 3 as the default online ...', 'Python 3.5 Release Schedule', 'Python 3.6 Release Schedule', 'Dependency specification for Python Software Packages', 'Python registration in the Windows registry', 'Python 3.7 Release Schedule', 'Python 3.8 Release Schedule', 'Python 3.9 Release Schedule', 'Annual Release Cycle for Python', "Reducing CPython's Feature Delivery Latency", 'Unicode-related Security Considerations for Python', 'Python Web Server Gateway Interface v1.0.1', 'Python Language Governance Proposal Overview', 'Python Positional-Only Parameters', 'Python Runtime Audit Hooks', 'Vectorcall: a fast calling protocol for CPython', 'New PEG parser for CPython', 'Python local packages directory', 'Python 3.10 Release Schedule', 'Metadata for Python Software Packages 2.2', 'Specifying Installer Requirements for Python Projects', 'Python 3.11 Release Schedule', 'A file format to list Python dependencies for ...', 'Graceful cooperation between external and Python ...', 'Convert macros to functions in the Python C API', 'Python Unicode Integration', 'Using Distutils to Build Python', 'Metadata for Python Software Packages', 'Defining Python Source Code Encodings', 'Metadata for Python Software Packages v1.1', 'Metadata for Python Software Packages 1.2', 'Database of Installed Python Distributions', 'Python launcher for Windows', 'Python Virtual Environments', 'Explicit Unicode Literal for Python 3.3', 'Adding an Enum type to the Python standard library', 'Improving Python ZIP Application Support', 'Add new APIs to customize Python memory allocators', 'Explicit bootstrapping of pip in Python installations', 'Add a new tracemalloc module to trace Python memory ...', 'Network Security Enhancements for Python 2.7.x', 'Backport ensurepip (PEP 453) to Python 2.7', 'Make the Python Launcher aware of virtual environments', 'HTTPS verification migration tools for Python 2.7', 'Adding a frame evaluation API to CPython', 'A New C-API for Thread-Local Storage in CPython', 'Metadata for Python Software Packages 2.1', 'Python Initialization Configuration', 'Raising Exceptions in Python 3000', 'Catching Exceptions in Python 3000', 'Simple input built-in in Python 3000', 'Bytes literals in Python 3000', 'Metaclasses in Python 3000', 'String representation in Python 3000', 'IP Address Manipulation Library for the Python ...', 'Python 1.6 Release Schedule', 'Python 2.0 Release Schedule', 'Python 2.1 Release Schedule', 'Python 2.2 Release Schedule', 'Python 2.3 Release Schedule', 'Python 2.4 Release Schedule', 'Migrating the Python CVS to Subversion', 'Python 2.5 Release Schedule', 'Python 2.6 and 3.0 Release Schedule', 'Python 2.7 Release Schedule', 'Choosing a distributed VCS for the Python project', 'Python 3.1 Release Schedule', 'Python 3.2 Release Schedule', 'Python 3.3 Release Schedule', 'Python 3.4 Release Schedule', 'Python Documentation Translations', 'Using GitHub Issues for CPython', 'Python 3000', 'Python Language Moratorium', 'Things that will Not Change in Python 3000', 'Miscellaneous Python 3.0 Plans', 'Python Governance Voting Process', 'Stackless Python', 'Python Online Help', 'A Database of Installed Python Packages', 'Pgen Module for Python', 'Programming by Contract for Python', 'Python Web3 Interface', 'Doing Python Micro Releases', 'Python Advanced Library', "Reworking Python's Numeric Model", 'Adding a Rational Type to Python', 'Adding a Rational Literal to Python', 'Python Interface Syntax', "How to Change Python's Grammar", 'Adding Roman Numeral Literals to Python', 'Python Synchronize/Asynchronize Block', 'Python Bytecode Verification', 'Design of the CPython Compiler', 'Exception Reorganization for Python 3.0', 'Enumerations in Python', 'Faster evolution of the Python Standard Library', 'Metadata for Python Software Packages 2.0', 'Restructuring the CPython startup sequence', 'Inclusion of implicit pip bootstrap in Python ...', 'Standard Metadata Extensions for Python Software ...', 'Core development workflow automation for CPython', 'Migration of dict iteration code to Python 3', 'Migrate CPython to Git, Github, and Phabricator', 'Migrate CPython to Git and GitLab', 'A Unified TLS API for Python', 'Backport ssl.MemoryBIO and ssl.SSLObject to Python 2.7', 'Security transparency in the Python runtime', 'A Concurrency Memory Model for Python', 'A rolling feature release stream for CPython', 'Python Compatibility Version', 'Coordinated Python release', 'Merging Unladen Swallow into CPython', 'Python Governance Model Lead by Trio of Pythonistas', 'Organization of the Python community', 'Style Guide for Python Code', 'Python Language Governance', 'The Zen of Python', 'Python Unicode Integration', 'Doing Python Releases 101', 'Doing Python Micro Releases', 'Python 1.6 Release Schedule', 'Python 2.0 Release Schedule', 'Python Advanced Library', 'Stackless Python', 'Python 2.1 Release Schedule', "Reworking Python's Numeric Model", 'Using Distutils to Build Python', 'Python Online Help', 'Adding a Rational Type to Python', 'Adding a Rational Literal to Python', 'Metadata for Python Software Packages', 'Python Interface Syntax', 'Python Database API Specification v1.0', 'Python Database API Specification v2.0', 'Python 2.2 Release Schedule', 'A Database of Installed Python Packages', 'Defining Python Source Code Encodings', 'Pgen Module for Python', 'Python 2.3 Release Schedule', 'Backward Compatibility for the Python 2 Standard ...', "How to Change Python's Grammar", 'Adding Roman Numeral Literals to Python', 'Metadata for Python Software Packages v1.1', 'Programming by Contract for Python', 'Python Synchronize/Asynchronize Block', 'Python 2.4 Release Schedule', 'Python Bytecode Verification', 'Python Web Server Gateway Interface v1.0', 'Design of the CPython Compiler', 'Metadata for Python Software Packages 1.2', 'Migrating the Python CVS to Subversion', 'Exception Reorganization for Python 3.0', 'Enumerations in Python', 'Python 2.5 Release Schedule', 'Python 2.6 and 3.0 Release Schedule', 'Python 2.7 Release Schedule', 'Choosing a distributed VCS for the Python project', 'Python 3.1 Release Schedule', 'Database of Installed Python Distributions', 'Python 3.2 Release Schedule', 'Python launcher for Windows', 'Python 3.3 Release Schedule', 'Pure Python/C Accelerator Module Compatibility ...', 'Python 2.8 Un-release Schedule', 'Python Virtual Environments', 'Provisional packages in the Python standard library', 'Faster evolution of the Python Standard Library', 'Explicit Unicode Literal for Python 3.3', 'Metadata for Python Software Packages 2.0', 'Python 3.4 Release Schedule', 'Migrating to Python 3 as the default online ...', 'Restructuring the CPython startup sequence', 'Adding an Enum type to the Python standard library', 'Inclusion of implicit pip bootstrap in Python ...', 'Improving Python ZIP Application Support', 'Python Web3 Interface', 'Add new APIs to customize Python memory allocators', 'Explicit bootstrapping of pip in Python installations', 'Add a new tracemalloc module to trace Python memory ...', 'Standard Metadata Extensions for Python Software ...', 'Core development workflow automation for CPython', 'Network Security Enhancements for Python 2.7.x', 'Migration of dict iteration code to Python 3', 'Backport ensurepip (PEP 453) to Python 2.7', 'Python 3.5 Release Schedule', 'Migrate CPython to Git, Github, and Phabricator', 'Make the Python Launcher aware of virtual environments', 'HTTPS verification migration tools for Python 2.7', 'Python 3.6 Release Schedule', 'Migrate CPython to Git and GitLab', 'Dependency specification for Python Software Packages', 'Python registration in the Windows registry', 'Adding a frame evaluation API to CPython', 'Python 3.7 Release Schedule', 'A New C-API for Thread-Local Storage in CPython', 'A Unified TLS API for Python', 'Python Documentation Translations', 'Backport ssl.MemoryBIO and ssl.SSLObject to Python 2.7', 'Security transparency in the Python runtime', 'Metadata for Python Software Packages 2.1', 'Python 3.8 Release Schedule', 'Python Positional-Only Parameters', 'Python Runtime Audit Hooks', 'Using GitHub Issues for CPython', 'Python local packages directory', 'A Concurrency Memory Model for Python', 'Python Initialization Configuration', 'Vectorcall: a fast calling protocol for CPython', 'Python 3.9 Release Schedule', 'Annual Release Cycle for Python', 'A rolling feature release stream for CPython', 'Python Compatibility Version', "Reducing CPython's Feature Delivery Latency", 'Coordinated Python release', 'New PEG parser for CPython', 'Python 3.10 Release Schedule', 'Metadata for Python Software Packages 2.2', 'Specifying Installer Requirements for Python Projects', 'Python 3.11 Release Schedule', 'A file format to list Python dependencies for ...', 'Graceful cooperation between external and Python ...', 'Convert macros to functions in the Python C API', 'Unicode-related Security Considerations for Python', 'Python 3000', 'Python Language Moratorium', 'Things that will Not Change in Python 3000', 'Miscellaneous Python 3.0 Plans', 'Raising Exceptions in Python 3000', 'Catching Exceptions in Python 3000', 'Simple input built-in in Python 3000', 'Bytes literals in Python 3000', 'Metaclasses in Python 3000', 'String representation in Python 3000', 'IP Address Manipulation Library for the Python ...', 'Merging Unladen Swallow into CPython', 'Python Web Server Gateway Interface v1.0.1', 'Python Language Governance Proposal Overview', 'Python Governance Voting Process', 'Python Governance Model Lead by Trio of Pythonistas', 'Organization of the Python community', 'and community, The Python core team', 'The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. ', 'Python Brochure', 'Python Books', 'Python Essays', 'Python Conferences', 'Python Logo', 'Python Wiki', 'Python News', 'Python Events', 'Python Events Archive', '                            \xa0Python Software Foundation']
['PythonBooks - Python Wiki', 'PythonBooks', 'PythonBooks', 'FrontPageRecentChangesFindPageHelpContentsPythonBooks', "There are a variety of books about Python.  Here's a guide to them: IntroductoryBooks (gentle overviews of the language) AdvancedBooks (for when you don't want gentle) ReferenceBooks (much information in a small space) Specific applications: GameProgrammingBooks NetworkProgrammingBooks GuiBooks JythonBooks ScientificProgrammingBooks SystemAdministrationBooks WebProgrammingBooks WindowsBooks XmlBooks ZopeBooks Books in languages other than English: UkrainianPythonBooks DutchPythonBooks FrenchPythonBooks GermanPythonBooks GreekPythonBooks HungarianPythonBooks JapanesePythonBooks KoreanPythonBooks RussianPythonBooks PersianPythonBooks PolishPythonBooks PortuguesePythonBooks ArabicPythonBooks SpanishPythonBooks When you see a book you like, don't hesitate to add your recommendation! There's also a Courses page, filled with links to video courses. External sources of information about (Python) books: PythonBooks.org - A collection of Python books featuring popularity based ranking. List of Free Python Books - A collection of Python books to Master Python. Computer-Books.china - A collection of Python books 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! There is also a list of OutOfPrintBooks. PythonBooks  (last edited 2021-10-20 13:15:16 by Srinivas Ramakrishna)", 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['FrontPage - Python Wiki', 'The Python Wiki', "Welcome to the Python Wiki, a user-editable compendium of knowledge based around the Python programming language. Some pages are protected against casual editing - see WikiEditingGuidelines for more information about editing content. Python is a great object-oriented, interpreted, and interactive programming language. It is often compared (favorably of course  ) to Lisp, Tcl, Perl, Ruby, C#, Visual Basic, Visual Fox Pro, Scheme or Java... and it's much more fun. Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typing. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++ (or other languages, depending on the chosen implementation). Python is also usable as an extension language for applications written in other languages that need easy-to-use scripting or automation interfaces.  Getting Started ", 'Python Books ', 'Books about Python plus reviews ', 'Python Audio Materials ', 'Python Implementations ', 'Different software which runs programs in the Python language ', 'Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  ', 'Python Software', ' Python Projects ', ' Information on finding software projects written in Python, including... ', 'Python Editors ', ' Ready-to-run applications which use Python ', 'Publishing Python Modules ', 'Python Core Development Tools', ' The Python Web Site ', ' Maintaining the official Python online resources ', 'Roundup and the code review services used by the Python project ', ' The infrastructure behind Python package hosting ', 'This Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. ', 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['Planet Python', 'Planet Python', 'All with pytest. So cool.Special Guest: Prayson Daniel.Sponsored By:PyCharm Professional: Try PyCharm Pro for 4 months and learn how PyCharm will save you time.Support Test & Code in PythonLinks:Python Bytes 250, with Prayson Daniel — Listen to this for more of an introduction to Prayson<p>Prayson Daniel, a principle data scientist, discusses testing machine learning pipelines with pytest.</p>', '<p>All with pytest. So cool.</p><p>Special Guest: Prayson Daniel.</p><p>Sponsored By:</p><ul><li><a href="https://testandcode.com/pycharm" rel="nofollow">PyCharm Professional</a>: <a href="https://testandcode.com/pycharm" rel="nofollow">Try PyCharm Pro for 4 months and learn how PyCharm will save you time.</a></li></ul><p><a href="https://www.patreon.com/testpodcast" rel="payment">Support Test & Code in Python</a></p><p>Links:</p><ul><li><a href="https://pythonbytes.fm/episodes/show/250/skorch-your-scikit-learn-together-with-pytorch" title="Python Bytes 250, with Prayson Daniel" rel="nofollow">Python Bytes 250, with Prayson Daniel</a> &mdash; Listen to this for more of an introduction to Prayson</li></ul>', "How to Send MMS in Python Using Plivo's Messaging API", "How to Send MMS in Python Using Plivo's Messaging API", 'How to sort a dictionary in Python', 'As of Python 3.6 dictionaries are ordered (technically the ordering became official in 3.7).', 'When sorting tuples, Python uses lexicographical ordering (which sounds fancier than it is).', 'We don’t usually want to operate on data structures in-place in Python: we tend to prefer making a new data structure rather than re-using an old one (this preference is partly thanks to how variables work in Python).', 'Python’s sorted function accepts a key argument that we can use for this!', 'Then we’d use our key function by passing it to the sorted function (yes functions can be passed to other functions in Python) and pass the result to dict to create a new dictionary:', 'In the rare case that you care about the order of your dictionary’s items, keep in mind that dictionaries are ordered by the insertion order of their keys (as of Python 3.6).', 'Python for Beginners', 'Dataclass in Python', 'Table of ContentsWhat is a dataclass?How to use dataclass in Python?Benefits of using dataclass in PythonConclusion', 'How to use dataclass in Python?', 'Benefits of using dataclass in Python', 'In this article, we have discussed the dataclass decorator in python. We have also implemented it and saw some of its peculiar properties that make it a useful construct to use in our programs. To learn more about python programming, you can read this article on list comprehension. You may also like this article on the linked list in Python.', 'The post Dataclass in Python appeared first on PythonForBeginners.com.', 'Real Python', "Python News: What's New From October 2021?", 'A culmination of great work done by volunteers worldwide, the release of Python 3.10 dominated the Python community’s news cycle in October 2021. At the same time that this release was making new features available, Python got recognition as the top programming language for the month in the TIOBE Programming Community index.', 'There are also some new opportunities for you to support the community by participating in the Python Developer Survey and answering the PyCon US 2022 Call for Proposals.', 'Let’s dive into the biggest Python news from the past month!', 'Free Bonus: Click here to get a Python Cheat Sheet and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions.', 'The Python 3.10 Release', 'New versions of Python are now released annually. We can look forward to the core developers sharing a lovely goody bag with the rest of us every October. With Python 3.10, which came out of beta on October 4th, everyone had something exciting to anticipate.', 'Each release of Python has a release manager who’s responsible for coordinating all changes and for building and preparing the files for distribution. The release manager for Python 3.10 and 3.11 is Pablo Galindo Salgado. In a first for Python, he built and released Python live on YouTube.', 'Python 3.10 Highlights', 'Improved error messages will make your life easier, whether you’re a new Python developer or an experienced one. In particular, the feedback that you get when your code isn’t valid Python is more pointed and actionable in Python 3.10 than in previous versions. As an example, consider the following code, where there’s no closing bracket at the end of the first line:', 'In Python 3.9 and earlier, you’ll see the following if you try to run this code:', '[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]', "If you're interested in reading more about how to build these models and how to get them highly accurate instead of just accurate - read our extensive and detailed Hands-On House Price Prediction - Deep Learning in Python with Keras!", ' Over the years, array computing in Python has evolved to support distributed', 'PyDDF Python Herbst Sprint 2021 (Online)', "The following text is in German, since we're announcing a Python sprint in Düsseldorf, Germany.", 'PyDDF Python Herbst Online Sprint 2021', 'Das Python Meeting Düsseldorf (PyDDF) veranstaltet ein Online Python Sprint Wochenende.', 'PyDDF Python Herbst Sprint 2021', 'Über das Python Meeting Düsseldorf', 'Das Python Meeting Düsseldorf ist eine regelmäßige Veranstaltung in Düsseldorf, die sich an Python Begeisterte aus der Region wendet.Einen guten ersten Überblick über die Vorträge bietet unser PyDDF YouTube-Kanal, auf dem wir Videos der Vorträge nach den Meetings veröffentlichen.', 'The UnicodeDecodeError occurs mainly while importing and reading the csv or json files in your Python code. If the provided file has some special characters, Python will throw an UnicodeDecodeError: ‘utf8’ codec can’t decode byte 0xa5 in position 0: invalid start byte.', 'When importing and reading a csv file, Python tries to convert a byte-array (bytes which it assumes to be a utf-8-encoded string) to a Unicode string (str). It is a decoding process according to\xa0UTF-8 rules. When it tries this, it encounters a byte sequence that is not allowed in utf-8-encoded strings (namely this 0xff at position 0).', "When you call\xa0.decode()\xa0an a\xa0unicode\xa0string, Python 2 tries to be helpful and decides to\xa0encode\xa0the Unicode string back to bytes (using the default encoding), so that you have something that you can really decode. This implicit encoding step\xa0doesn’t\xa0use\xa0errors='replace', so if there are any characters in the Unicode string that aren’t in the default encoding (probably ASCII) you’ll get a\xa0UnicodeEncodeError.", '(Python 3 no longer does this as it is terribly confusing.)', 'Talk Python to Me', "Do you do anything with Jupyter notebooks? If you do, there is a very good chance you're working with the pandas library. This is one of THE primary tools of anyone doing computational work or data exploration with Python. Yet, this library is massive and knowing the idiomatic way to use it can be hard to discover.  ", '<b>Follow Talk Python on Twitter</b>: <a href="https://twitter.com/talkpython" target="_blank" rel="noopener">@talkpython</a><br/>', "<a href='https://talkpython.fm/training'>Talk Python Training</a>", 'Python Bytes', '<p><strong>Brian #2:</strong> <a href="https://lwn.net/SubscriberLink/875441/c29a2006cf489b7f/"><strong>Late-bound argument defaults for Python</strong></a></p>', '<li>At first blush, Angelico\'s idea to fix this "wart" in Python seems fairly straightforward, but the discussion has shown that there are multiple facets to consider. It is not quite as simple as "let\'s add a way to evaluate default arguments when the function is called"—likely how it was seen at the outset. That is often the case when looking at new features for an established language like Python; there is a huge body of code that needs to stay working, but there are also, sometimes conflicting, aspirations for features that could be added. It is a tricky balancing act.</li>', '<li>Pyjion is a JIT for Python based upon CoreCLR</li>', '<li>Requires Python 3.10, .NET Core 6</li>', 'Python⇒Speed', ' #499 – NOVEMBER 16, 2021 View in Browser »     The PSF Is Searching for Its Next Executive Director  After announcing earlier this summer that Ewa Jodlowska is leaving after ten years of service, the PSF has begun its search for the organization’s next Executive Director. Interested? You can apply here. PYTHON SOFTWARE FOUNDATION    Selecting a Programming Language Can Be a Form of Premature Optimization  “Have you ever been told that Python couldn’t be used for a project because it wouldn’t be fast enough? I have, and I find it a bit frustrating as big banks, YouTube, Instagram, and plenty of other places that are performance-sensitive still manage to select Python and be happy.” BRETT CANNON opinion    DataStax Astra DB, Built on Apache Cassandra™ Get 80 Gigabytes of Storage Free Every Month   DataStax Astra DB, built on Cassandra - now made easy in the cloud. Create a free Cassandra database in minutes for global scale on a startup budget. Get 80 gigabytes of storage free every month! Register now → DATASTAX sponsor    Advanced Visual Studio Code for Python Developers  In this tutorial, you’ll learn how you can configure, extend, and optimize Visual Studio Code for a more effective and productive Python development environment. By digging into this customizable code editor and IDE, you’ll put yourself on track to be a VS Code power user. REAL PYTHON    Securely Deploy a Django App With Gunicorn, Nginx, & HTTPS  Ready to take your Django app beyond development? Learn how to securely deploy your Django web app in production over HTTPS with Gunicorn and Nginx. Along the way, you’ll explore how HTTP headers can fortify your app’s security. REAL PYTHON    How Python’s list Data Structure Really Works  This article explores the nuts and bolts of Python list operations, their time complexity, and underlying data structures. ANTON ZHIYANOV • Shared by Anton Zhiyanov    Django Bugfix Release: 3.2.9  DJANGO SOFTWARE FOUNDATION   Python Jobs Senior Backend Software Engineer (Anywhere) Clay Senior Python Engineer (Anywhere) Flashpoint Senior Software Engineer Backend (USA) Tomo Full Stack Software Engineer Django/Postgres/React (Washington D.C., USA) Quorum Senior Software Engineer (Washington D.C., USA) Quorum Python Backend Engineer in Healthcare (Hasselt, Belgium) madewithlove More Python Jobs >>> Articles & Tutorials  The Legacy of OLPC and Charismatic Pitfalls in Teaching Programming  Do you remember the One Laptop Per Child program? What went wrong, and what can we learn from the program’s failure? What are the potential pitfalls of charismatic technology, and how can we avoid them when introducing students to programming? This week on the show, former guest Al Sweigart and author Morgan Ames are here to talk about her book “The Charisma Machine - The Life, Death, and Legacy of One Laptop per Child.” REAL PYTHON podcast    Ruby vs Python Comes Down to the for Loop  “Contrasting how each language handles iteration helps understand how to work effectively in either.” Related discussion of this article on Hacker News. DOUG TURNBULL    Find Out Why Scout’s a Developer’s Best Friend With a Free 14-Day Trial, No Credit Card Needed   Scout uses tracing logic to tie bottlenecks to source code so developers can get back to building great products instead of wasting time fixing performance issues. Real-time alerting gives you the insights you need in 4 min or less! Deploy today and we’ll donate $5 to the OSS project of your choice → SCOUT APM sponsor    Create Distance Matrix Using Google Maps APIs  This article describes step by step how to use the Google Maps Distance Matrix API, how to parse its data to create a distance table and finally, how to store the parsed data in a data base. JUAN ACOSTA • Shared by Juan Acosta    Cython, Rust, and More: Choosing a Language for Python Extensions  You can write Python extensions with Cython, Rust, and many other tools. In this article you’ll learn which one you should use, depending on your particular use case and needs. ITAMAR TURNER-TRAURING    Async Python Is Not Faster  “Async Python is slower than ‘sync’ Python under a realistic benchmark. A bigger worry is that async frameworks go a bit wobbly under load.” CAL PATERSON    Monads and Python  “Porting Monads to Python is a common hobby. But should we really do it?” ROBERT COLLINS    CData Software – The Easiest Way to Connect Python With Data  Simple Python data access to more than 250 cloud applications, and data sources. Connect, Integrate, & Automate your data from Python, or any other application or tool. CDATA SOFTWARE sponsor    Idiomatic Algebraic Data Types in Python With Dataclasses and Union  EDWARD Z. YANG    Infinitely Nested Dictionary  SUSAM PAL    English to German Translation Using Seq2Seq Models in PyTorch  JOHN LUDHI   Projects & Code  pyAirtable: Python Client for the Airtable API  PYAIRTABLE.READTHEDOCS.IO    kuroko: Python Dialect With Explicit Variable Declaration and Block Scoping  GITHUB.COM/KUROKO-LANG    python-mini-projects: Mini Projects to Enhance Your Python Skills  GITHUB.COM/PYTHON-WORLD    Model Bakery: Smart Fixtures for Better Tests  MODEL-BAKERY.READTHEDOCS.IO    s3-credentials: Tool for Creating Credentials for S3 Buckets  SIMONWILLISON.NET   Events  Weekly Real Python Office Hours Q&A (Virtual)  November 15, 2021 REALPYTHON.COM    Women Who Code CONNECT Forward 2021  November 18 to November 20, 2021 WOMENWHOCODE.DEV    PyData Bristol Meetup  November 18, 2021 MEETUP.COM    Python Northwest  November 18, 2021 PYNW.ORG.UK    PyCon APAC 2021  November 19 to November 24, 2021 PYCON.ORG    Xtreme Python  November 24 to November 25, 2021 XTREMEPYTHON.DEV    Happy Pythoning!This was PyCoder’s Weekly Issue #499.View in Browser » ', '[ Subscribe to 🐍 PyCoder’s Weekly 💌 – Get the best Python news, articles, and tutorials delivered to your inbox once a week >> Click here to learn more ]', 'Python ValueError: could not convert string to float', 'If you convert a string object into a floating point in Python, you will get a ValueError: could not convert string to float. Usually, this happens if the string object has an invalid floating value with spaces or comma Python will throw ValueError while parsing into string object into float.', 'Python has a built-in float() method that can parse the string to a floating-point number. This method will be useful when we need to perform a mathematical operation on a string object.', 'If you see the above code, the order value has a comma-separated numeric value, and while parsing into a float, Python will throw ValueError: could not convert string to float.', 'The post Python ValueError: could not convert string to float appeared first on ItsMyCode.', 'Inspired Python', 'Let’s Write a Game Boy Emulator in Python', 'Let’s Write a Game Boy Emulator in Python', 'And in this course I’m going to teach you how to write a Game Boy emulator in Python.', 'Python Pattern Matching Examples: Working with Paths and Files', 'Python Pattern Matching Examples: Working with Paths and Files', 'Manipulating file and path strings is dreary work. It is a common activity, particularly in data science where the file structure may contain important semantic clues like a date or the source of the data. Contextualizing that information is usually done with a mixture of if statements and liberal use of pathlib’s Path or os.path, but the structural pattern matching feature in Python 3.10 is there to cut down on the tedium.', 'Python for Beginners', 'Namedtuple in Python', 'Table of ContentsProblems with tuples and dictionariesWhat is a namedtuple in python?How to create a namedtuple in Python?Benefits of using a namedtuple in PythonHow to modify a namedtuple?Conclusion', 'How to create a namedtuple in Python?', 'Benefits of using a namedtuple in Python', 'In this article, we have discussed about namedtuple in python. We also discussed its use and benefits over tuples and dictionaries. To learn more about python programming, you can read this article on list comprehension. You may also like this article on the linked list in Python.', 'The post Namedtuple in Python appeared first on PythonForBeginners.com.', 'Real Python', "Building Lists With Python's .append()", 'Adding items to a list is a fairly common task in Python, so the language provides a bunch of methods and operators that can help you out with this operation. One of those methods is .append(). With .append(), you can add items to the end of an existing list object. You can also use .append() in a for loop to populate lists programmatically.', '[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]', 'Monads and Python', 'When I wrote this I was going to lead in by saying: I’ve been spending a chunk of time recently thinking about how best to represent Monads in Python. Then I forgot I had this draft for 3 years. So.. I *did* spend a chunk of time. Perhaps it will be of interest anyway… though I had not finished it (otherwise it wouldn’t still be draft would it :))', 'Why wouldn’t you do this? Because you get some baggage. There are two bits in particular. firstly, Monads solve a problem Python doesn’t have. Consider:', 'In Haskell, the compiler is free to run those functions in either order as there is no data dependency between them. In Python, it is not – the order is specified directly by the code. Haskell requires a data dependency to force ordering (and in fact RealWorld in order to distinguish different invocations of IO). So to define a sequence here it defines a new operator (really just an infix function) called bind (>>= in haskell). You then create a function to run after the monad does whatever it needs to do. Whenever you see code like this in Haskell:', 'A direct transliteration into Python is possible a few ways. One of the key things though is to preserve the polymorphism – bind is dependent on the monad instance in use, and\xa0the original code like this can be valid under many instances.', 'If we go back to the Haskell code, it is (mostly) just syntactic sugar, and when desugared starts look to very much like the Python.', 'This style of Python translation would take a monad instance as a parameter and use that to access the type. Note in particular that the behavior of bind is involved at every step here, as it is in the desugared Haskell.', 'This confused me, so I reached out to Chris\xa0and we had a really fascinating chat about it. He pointed me at another way that Haskellers separate out IO for testing. That approach is to create a class specifically for the IO in your code and have two implementations. One production one and one test implementation. In Python:', 'This seems to be a much more direct way to achieve the goal of being able to write pure testable code. And it got me thinking about the actual basic premise of porting monads to Python.', 'The goal is to be able to write Pythonic, pithy code that takes advantage of the behaviour in the bind for that monad. Lets consider Maybe.', 'But we can’t use that unless we start writing our normally straight forward code such that every statement becomes a closure – which we don’t want.. so we want to interfere with the normal process by which Python chooses to run new code.', 'There is a mechanism that Python gives us where we get control over that: generators. While they are often used for concurrency, they can also be used for flow control.', 'The problem is, that its still not regular Python code, and its still somewhat mental gymnastics. Natural for someone thats used to thinking in those patterns, and it works beautiful in Haskell, or Rust, or other languages.', 'There are two fundamental underpinnings behind this for Haskell; type control from context rather than as part of the call signature and do notation which makes code using it look like Python.\xa0 In python we are losing the notation, but gaining the bind operator on the Maybe monad which short circuits Nothing to Nothing across an arbitrary depth of of computation.', 'Python basically is do notation, and if we just had some way of separating out the side effects from the pure code, we’d have pure code. And we have that from above.', 'So there you have it, a three year old mull: perhaps we shouldn’t port Monads to Python at all, and instead just:', 'I think there is room if we wanted to to do a really nice, syntax integrated Monad style facility in Python (and Maybe would be a great reference case for it), but generator overloading – possibly async might let a nicer thing be done but I haven’t investigated that yet.', 'Python Insider', 'Python 3.9.9 hotfix release is now available', 'Get it here: https://www.python.org/downloads/release/python-399/Python 3.9.9 is the eighth maintenance release of the legacy 3.9 series. Python 3.10 is now the latest feature release series of Python 3. Get the latest release of 3.10.x here.', '3.9.9 was released out of schedule as a hotfix for an argparse regression in Python 3.9.8 which caused complex command-line tools to fail recognizing sub-commands properly. Details in BPO-45235. There are only three other bugfixes in this release compared to 3.9.8. See the changelog for details on what changed.', 'Upgrading to 3.9.9 is highly recommended if you’re running Python 3.9.8.', 'The next Python 3.9 maintenance release will be 3.9.10, currently scheduled for 2022-01-03.', 'Real Python', 'To make the most out of this tutorial, you should have an introductory-level understanding of Python, Django, and the high-level mechanics of HTTP requests.', '[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]', 'Why did you start using Python?', 'Out of the ashes of a career in finance, I wanted to find a career using skills that I\'ve already used in my undergraduate Business Degree. I was pivoting to being a Business Analyst and while attempting to dip my toe into Data Science, I found PhillyPUG (Philadelphia Python Users Group). DjangoCon US 2016 was held in Philadelphia and I found a network of people who pushed my Python use forward and offered FREE resources. That six-month period was my real "start" in Python.', 'I use JavaScript daily. No language shaming here, but Python will always be that girl in my book.', "Outside of my 9-5, I'm the founder of At The Root (https://AtTheRoot.dev) which is home to the first and only AntiRacist Ethical Source License. We're working in partnership with the Organization for Ethical Source (https://EthicalSource.dev) to propel the first draft of our License forward. Code-wise, we’re currently developing the At The Root Forum and Checklist, a place where subject matter experts can give actionable suggestions on how to help your project be actively anti racist -- things like requiring a block button on social platforms, or conclusions drawn from collecting gender, or access and consent when collecting biometric data. The forum is built in Gatsby/React and Wagtail/Django/Python and we're looking for both code and content contributors. If someone is interested in either, please email contact@AtTheRoot.dev.", 'Which Python libraries are your favorite (core or 3rd party)?', "Most of my top picks are going to be libraries supporting Wagtail and Django! It will be hard to pick, but Django Rest Framework must be one of my top. Factory Boy, CookieCutter, and Black Python formatter are big ones I've been using a lot lately. I'm very excited to cut my teeth on Rich and htmx. I've heard great things.", 'The post PyDev of the Week: Dawn Wages appeared first on Mouse Vs Python.', 'Other Python Planets', 'Python Summer of Code', 'Planet Python Francophone', 'Planet Python Argentina', 'Planet Python Brasil', 'Planet Python Poland', 'Python Libraries', 'Python/Web Planets', '"Speno\'s Pythonic Avocado"', 'Awesome Python Applications', 'BioPython News', 'DaPythonista', 'Daily Tech Video (Python)', 'Dallas Fort Worth Pythoneers', 'Doing Math with Python', 'EuroPython', 'EuroPython Society', 'From Python Import Podcast', 'Full Stack Python', 'Import Python', 'Inspired Python', 'IronPython-URLs', 'Just a little Python', 'Montreal Python User Group', 'Omaha Python Users Group', 'Python 4 Kids', 'Python 411 Podcast', 'Python Advocacy', 'Python Anywhere', 'Python Bytes', 'Python Celery - Weekly Celery Tutorials and How-tos', 'Python Circle', 'Python Data', 'Python Diary', 'Python Does What?!', 'Python Engineering at Microsoft', 'Python GUIs', 'Python Insider', 'Python Morsels', 'Python Piedmont Triad User Group', 'Python Pool', 'Python Software Foundation', 'Python Sweetness', 'Python User Groups', 'Python for Beginners', 'Python on Karan', 'Python with Myo', 'Python(x,y) News', 'PythonClub - A Brazilian collaborative blog about Python', 'PythonDebugging.com', 'Pythonicity', 'Pythonology', 'Python⇒Speed', 'Real Python', 'Talk Python to Me', 'TechBeamers Python', 'The Python Coding Blog', 'The Python Papers', 'Weekly Python Chat', 'Weekly Python StackOverflow Report']
['Python Software Foundation News', '\xa0\xa0News from the Python Software Foundation', 'Humphrey Butau, web developer, PSF fellow, and PyCon Zimbabwe co-founder was awarded the Python Software Foundation 2020 Q4 Community Service Award.RESOLVED that the Python Software Foundation award the Q4 2020 Community Service Award to Humphrey Butau. Humphrey is the co-founder of PyCon Zimbabwe and was an early member of the Python community in Harare, Zimbabwe. He is a PSF fellow and has been stewarding our local community for a number of years. Humphrey is also a great speaker and has given talks at many conferences including keynoting DjangoCon Europe, speaking at PyCon Namibia and PyCon Italia.We interviewed Humphrey to learn more about his inspiration and work with the Python community. We also asked Anna Makarudze, a close associate of Humphrey, to share more light about Humphrey\'s community efforts and impact on the community.The Origin StoryWhat was your earliest memory of how you got into tech?\xa0I got into tech as an IT Help Desk Support and Technician. While doing this job, I started to learn Visual Basic for building applications on my own.\xa0A friend of mine later introduced me to Python in 2010, and I continued to teach myself programming.I later gave up as I didn\'t manage to make headway since I was doing these things on my own, and there were no other peers from whom I could get help if I got stuck.It was only in 2015 when I got a scholarship for an online Python and Django course with Treehouse that my coding journey continued in earnest.What was your earliest involvement with the Python community?In 2016 Anna Makarudze and I applied for and got financial assistance to attend PyCon Namibia in Windhoek. Although the financial aid was not enough to cover all our expenses if we took a flight to Namibia, we overlooked all that and took the alternative of a bus ride of 30 hours from Harare, Zimbabwe, to Windhoek, Namibia.Attending PyCon Namibia was more important for the Python community and us in Zimbabwe at the time. It was an opportunity to learn from the international Python community.We attended the conference, learned a lot, and met key people active in the global Python community. I am forever grateful to the organizers of PyCon Namibia 2016 as I believe it sparked the "Python revolution" in Africa, with PyCons in Ghana, Nigeria, Zimbabwe, and the first PyCon Africa Conference.The people as a source of inspirationWhat drives and inspires you to volunteer your time and resources to the PyCon Zimbabwe and the wider Python community?It is the people!What motivates me is what comes out of meeting people who share the same interests as me. The conferences, workshops, activities, and events are a huge platform for sharing information and building oneself career-wise.It is also heartwarming to hear people mention that their attendance at a Django Girls workshop encouraged them to pursue a career in programming.How has your involvement within the Python community helped your career?By being a member of the Python community, I have discovered so many possibilities that I might have never realized. I have learned a lot from the events that I have attended, and this has helped me have a clear picture of various roles that I can pursue.In 2019, I landed my first role as a software developer. I am sure this was possible through my involvement in the Python community.Coming from being a hobbyist programmer without Computer Science, my employer was willing to hire and mentor me.How has Covid affected your work with the Python community, and what steps are you taking to push the community forward during these trying times?Before March 2020, we were already facing challenges as a Python community in Zimbabwe.Covid-19 came and poured cold water on the steps that we were already taking to address these challenges. For the past one and half years, we put aside plans to hold in-person events as we put the health and well-being of members of our Python community first.We are currently discussing plans for holding virtual events and the improvement of the Covid-19 situation in Zimbabwe. We hope to get back to hybrid events in 2022.Impact story by Anna MakarudzeAs early as 2015, Humphrey had the vision to start a Python community in Zimbabwe to raise awareness for Python, a relatively new programming language in Zimbabwe.It is because of Humphrey\'s leadership that we were able to bring PyCon to Zimbabwe.Many of our community members, including myself, are working remotely due to Humphrey\'s work.I also got involved in community work like speaking at DjangoCon Europe and DjangoCon US, running PyLadies Harare for a few years, and becoming Django Software Foundation president because of Humphrey\'s work.There is no doubt that many of us in Zimbabwe are in the global Python/Django community because of Humphrey\'s vision of starting a community in Zimbabwe.The Python Software Foundation congratulates and celebrates Humphrey Butau.', "Summary: The PSF launched its end-of-the-year fundraiser. There are two ways to donate: 1. donate directly to the PSF or 2. purchase a discounted PyCharm license, with all proceeds going to the PSF. Contributing to the PSF financially helps sustain programs that support the larger Python community.2021 is flying by! Regardless, the PSF made the best of this year by launching two critical initiatives thanks to Google's sponsorship and Bloomberg's grant. We're super happy to now support Python core development and Python Packaging in new ways:\xa0Core Development: In July 2021, the PSF hired its inaugural Developer-in-Residence, Łukasz Langa. Łukasz works full-time (one year term) to assist CPython maintainers and the Python Steering Council. Areas of responsibility include analytical research to understand the project's volunteer hours, investigating project priorities and tasks as we advance, and working on those priorities.\xa0Packaging: In August 2021, the PSF hired its first-ever Python Packaging Project Manager, Shamika Mohanan. Shamika is performing outreach to Python users to help the PSF better understand the landscape, identify fundable initiatives, seek grants, oversee funded projects, and report on their progress and results to improve Python packaging for all users.To continue the above initiatives, the PSF will need to generate USD 325,000 per year. To hire additional folks for either initiative (in demand), the PSF will need USD 500,000+ per year. The amount of funding required is in addition to funding needed to maintain PyCon US, our fiscal sponsor program, several working groups, an international grants program, a healthy financial reserve, and a growing staff to operate the PSF. Even if donations are a portion of the PSF's revenue, every dollar makes an impact and allows the PSF financial stability to continue supporting a growing community!Contributing to the PSF helps sustain programs that support the larger Python community. Donate today! \xa0Donate directly to the PSF\xa0or purchase a discounted PyCharm license, with all proceeds going to the PSF.", 'The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.', 'Python Software Foundation', 'The Python Software Foundation is searching for it...']
["With PyCon US 2022 planning underway, we are excited to be launching the conference website along with our sponsorship program. Our team is planning to host the event in person with an online component. Head over to the PyCon US 2022  website for details about the conference and more information about our sponsorship program. You will not want to miss the opportunity to be part of this event! If your organization depends on the Python ecosystem, check out our prospectus online, and sign up today ! \xa0 The PSF's comprehensive sponsorship program allows organizations to support community programs financially and delivers a variety of benefits that provide visibility across PyCon US, pypi.org, python.org, and much more:\xa0  Outreach & Networking:  Access to 2,000+ attendees interested in your products and services to generate qualified leads. Recruiting : Access to qualified job candidates. If you’re hiring, there’s no better place to find Python developers than PyCon US. Marketing : ", 'Want to play a pivotal role in the planning and success of PyCon US? Here’s your chance! Join our team by volunteering for one of our Call for Proposal Committees. We are looking for motivated volunteers who want to contribute their time and knowledge to make this year’s conference a great success. As a committee member, you’ll have the opportunity to be part of the PyCon US staff team, meet and work with organizers, volunteers, and speakers, and share your diverse skillset with the Python community. PyCon US is seeking volunteers of all experience levels and backgrounds to join our Program, Tutorial, and Posters Committees. Learn more about each committee and where to submit your application on the PSF website . Thank you for considering this opportunity. PyCon US would not be a success without the support of community members like you!\xa0\xa0', 'The PyCon US 2021 recordings are available on our YouTube channel .\xa0\xa0Be sure to subscribe to our channel for notifications of new content. This channel will be used for all future conferences in order to keep all content in one channel. The recordings are synced with the available live captions taken during the event. There are some tutorials whose files did not align with the recordings for many unforeseen reasons. Please utilize the closed captions offered on YouTube for those without the caption files synced.\xa0 There are three tutorials that needs some fine tuning and will be available next week:     Introduction to Decorators: Power UP Your Python Code / Geir Arne Hjelle Effective Data Visualization / Husni Almoubayyed A Hands-On Introduction to Multi-Objective Optimisation / Eyal Kazin We can not mention enough times our heartfelt gratitude to all the presenters of the tutorials, talks, keynote addresses, posters, workshops, summits and lightning talks for their time and efforts in', 'Python', 'This is the blog of PyCon US, with guest contributions from Python conferences everywhere!', 'EuroPython in Europe', 'Python Brasil in Brazil', 'Python DE in Germany', 'Python FI in Finland', 'Python IE in Ireland', 'Python UA in Ukraine', 'Copyright © 2009–2021 Python Software Foundation']
['PythonEventsCalendar - Python Wiki', 'PythonEventsCalendar', 'PythonEventsCalendar', 'FrontPageRecentChangesFindPageHelpContentsPythonEventsCalendar', 'Python Events Calendar', "The Python events calendar is a combination of Google calendars maintained by the Python Calendar Team and published on the following sites: http://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) https://twitter.com/PythonEvents (@PythonEvents) http://legacy.python.org/ (in the side bar on the left of all pages) As of January 2020, we have more then 520 events listed and the calendars are proving to be a really useful resource for the Python community. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents", 'Python Events Calendar', 'Python Calendar Team', ' * focus on Python: ', ' * HTML link using the format <a href="http://url/">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format "<a\xa0href="http://url/">name\xa0of\xa0the\xa0event</a>"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. "monthly, every second Thursday". Notes: For online events, please use "Online Event" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. ', 'In some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name\xa0of\xa0the\xa0event start and end dates: start day and end day of the event, entered as "all day events" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city,\xa0[state,]\xa0country description: <a\xa0href="http://url/">name\xa0of\xa0the\xa0event</a> The same notes as above apply to bulk submissions. ', 'Python Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget ', 'Python Events Calendar Python User Group Calendar ', 'Note: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar ', '@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. ', 'Python Calendar Team', "Events have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar. The same criteria for calendars apply to online events as well. Please add these using Online\xa0Event as location. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. ", 'Python Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. ', '  <a href="https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics">Python Events iCal Calendar</a><br/>', '  <a href="https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics">Python User Group iCal Calendar</a>', 'Google Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. PythonEventsCalendar  (last edited 2021-03-25 11:14:19 by MarcAndreLemburg)', 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['3. An Informal Introduction to Python — Python 3.10.0 documentation', '3. An Informal Introduction to Python', '3.1. Using Python as a Calculator', '2. Using the Python Interpreter', 'Python »', 'The Python Tutorial »', '3. An Informal Introduction to Python', '3. An Informal Introduction to Python¶', 'prompt, include comments.  Comments in Python start with the hash character,', 'Since comments are to clarify code and are not interpreted by Python, they may', '3.1. Using Python as a Calculator¶', 'Let’s try some simple Python commands.  Start the interpreter and wait for the', 'With Python, it is possible to use the ** operator to calculate powers 1:', '_.  This means that when you are using Python as a desk calculator, it is', 'In addition to int and float, Python supports other types of', 'Python also has built-in support for complex numbers,', 'Besides numbers, Python can also manipulate strings, which can be expressed', "'Python'", "'Python'", ">>> word = 'Python'", "'Python'", "'Python'", 'Python strings cannot be changed — they are immutable.', 'Python knows a number of compound data types, used to group together other', 'Of course, we can use Python for more complicated tasks than adding two and two', 'remains true.  In Python, like in C, any non-zero integer value is true; zero is', 'The body of the loop is indented: indentation is Python’s way of grouping', 'for Python with a text editor; all decent text editors have an auto-indent', '3. An Informal Introduction to Python', '3.1. Using Python as a Calculator', '2. Using the Python Interpreter', 'Python »', 'The Python Tutorial »', '3. An Informal Introduction to Python', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['Python Developers Survey 2021', 'Python Developers Survey 2021', 'Python Developers Survey 2021', 'Hey Pythonista,', 'This is the fifth iteration of the official Python Developers Survey. With this survey, we aim to get an understanding of how the world of Python development looks today and how it compares to last year. In 2020, over 28,000 Python developers from over 150 countries responded, sharing their opinions and helping us get an accurate picture of the Python community.', 'The results of this survey serve as a major source of knowledge about the current state of the Python community, and we encourage you to support this initiative by taking 10-15 minutes to fill it out.\xa0', 'This year we have added questions that will help the CPython Developer-in-Residence and the Python Packaging Project Manager prioritize their work based on community feedback.', 'The survey is organized in partnership between the Python Software Foundation and JetBrains. It’s hosted by JetBrains, so your responses will be subject to the JetBrains Survey Terms and Conditions.*\xa0Indicates a required questionSurvey Terms and Conditions *This question is required. ']
['Python 3.11 (in development)', 'Python 3.10 (stable)', 'Python 3.9 (stable)', 'Python 3.8 (security-fixes)', 'Python 3.7 (security-fixes)', 'Python 3.6 (security-fixes)', 'Python 3.5 (EOL)', 'Python 2.7 (EOL)', 'Python Developer’s Guide', 'Python »', 'Python 3.10.0 documentation', '  Welcome! This is the official documentation for Python 3.10.0.', "What's new in Python 3.10?", 'Python Setup and Usage', 'how to use Python on different platforms', 'Python HOWTOs', 'Installing Python Modules', 'installing from the Python Package Index & other sources', 'Distributing Python Modules', 'Python/C API', 'History and License of Python', 'Python 3.11 (in development)', 'Python 3.10 (stable)', 'Python 3.9 (stable)', 'Python 3.8 (security-fixes)', 'Python 3.7 (security-fixes)', 'Python 3.6 (security-fixes)', 'Python 3.5 (EOL)', 'Python 2.7 (EOL)', 'Python Developer’s Guide', 'Python »', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['Python Insider', 'Python core development news and information.', 'Python 3.9.9 hotfix release is now available', 'Get it here: https://www.python.org/downloads/release/python-399/Python 3.9.9 is the eighth maintenance release of the legacy 3.9 series. Python 3.10 is now the latest feature release series of Python 3. Get the latest release of 3.10.x here.', '3.9.9 was released out of schedule as a hotfix for an argparse regression in Python 3.9.8 which caused complex command-line tools to fail recognizing sub-commands properly. Details in BPO-45235. There are only three other bugfixes in this release compared to 3.9.8. See the changelog for details on what changed.', 'Upgrading to 3.9.9 is highly recommended if you’re running Python 3.9.8.', 'The next Python 3.9 maintenance release will be 3.9.10, currently scheduled for 2022-01-03.', 'Python 3.9.8 and 3.11.0a2 are now available', ' Python 3.9.8 and Python 3.11.0a2 with a fixed Tcl/Tk version. In 3.9.8 ', ' We didn’t have to bump the version number of Python itself since there ', 'are no Python source differences between this package and the original ', 'Python 3.9.8Get it here: https://www.python.org/downloads/release/python-398/ Python 3.9.8 is the seventh maintenance release of the legacy 3.9 series. Python 3.10 is now the latest feature release series of Python 3. Get the latest release of 3.10.x here.', 'considerable interest in improving Python 3.9. To compare, at the same ', 'stage of the release cycle Python 3.8 received over 25% fewer commits. ', 'The next Python 3.9 maintenance release will be 3.9.9, currently scheduled for 2022-01-03.', 'Python 3.11.0a2', 'Python 3.11 is still in development.  This release, 3.11.0a2 is the second of seven planned alpha releases.', 'Many new features for Python 3.11 are still being planned and written.  Among the new major new features and changes so far:', 'PEP 657 – Include Fine-Grained Error Locations in TracebacksThe Faster CPython Project 1 is already yielding some exciting results: this version of CPython 3.11 is ~12% faster on the geometric mean of the PyPerformance benchmarks, compared to 3.10.0.(Hey, fellow core developer, if a feature you find important is missing from this list, let Pablo know.)', 'The next pre-release of Python 3.11 will be 3.11.0a3, currently scheduled for Monday, 2021-12-06.', 'Python 3.11.0a1 is available', 'Now that we are on a release spree, here you have the\xa0first alpha release\xa0of Python 3.11: Python 3.11.0a1. Let the testing and validation games begin!https://www.python.org/downloads/release/python-3110a1/Major new features of the 3.11 series, compared to 3.10Among the new major new features and changes so far:PEP 657\xa0– Include Fine-Grained Error Locations in TracebacksPEP 654\xa0– PEP 654 – Exception Groups and except*(Hey,\xa0fellow core developer,\xa0if a feature you find important is missing from this list,\xa0let Pablo know.)The next pre-release of Python 3.11 will be 3.11.0a2, currently scheduled for 2021-11-02.More resourcesOnline DocumentationPEP 664, 3.11 Release ScheduleReport bugs at\xa0https://bugs.python.org.Help fund Python and its community.And now for something completely differentSchwarzschild black holes are also unique because they have a space-like singularity at their core, which means that the singularity doesn\'t happen at a specific point in *space* but happens at a specific point in *time* (the future). This means once you are inside the event horizon you cannot point with your finger towards the direction the singularity is located because the singularity happens in your future: no matter where you move, you will "fall" into it.For a Schwarzschild black hole (a black hole with no rotation or electromagnetic charge), given a free fall particle starting at the event horizon, the maximum propper time\xa0(which\xa0happens when it falls without angular velocity)\xa0it will experience to fall into\xa0the singularity is `π*M` (in natural units), where M is the mass of the black hole. For Sagittarius A* (the black hole at the centre of the milky way) this time is approximately 1 minute.We hope you enjoy the new releases!Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.https://www.python.org/psf/Your friendly release team,Ned Deily @nad\xa0Steve Dower @steve.dower\xa0Pablo Galindo Salgado @pablogsal', 'Python 3.10.0 is available', 'On behalf of the Python development community and the Python 3.10 release team, I’m pleased to announce the availability of Python 3.10.0.Python 3.10.0 is the newest major release of the Python programming language, and it contains many new features and optimizations.https://www.python.org/downloads/release/python-3100/Major new features of the 3.10 series, compared to 3.9Among the new major new features and changes so far:PEP 623\xa0– Deprecate and prepare for the removal of the wstr member in PyUnicodeObject.PEP 604\xa0– Allow writing union types as X | YPEP 612\xa0– Parameter Specification VariablesPEP 626\xa0– Precise line numbers for debugging and other tools.PEP 618\xa0– Add Optional Length-Checking To zip.bpo-12782: Parenthesized context managers are now officially allowed.PEP 632\xa0– Deprecate distutils module.PEP 613\xa0– Explicit Type AliasesPEP 634\xa0– Structural Pattern Matching: SpecificationPEP 635\xa0– Structural Pattern Matching: Motivation and RationalePEP 636\xa0– Structural Pattern Matching: TutorialPEP 644\xa0– Require OpenSSL 1.1.1 or newerPEP 624\xa0– Remove Py_UNICODE encoder APIsPEP 597\xa0– Add optional EncodingWarningMore resourcesOnline DocumentationPEP 619, 3.10 Release ScheduleReport bugs at\xa0https://bugs.python.org.Help fund Python and its community.bpo-38605:\xa0from __future__ import annotations\xa0(PEP 563) used to be on this list in previous pre-releases but it has been postponed to Python 3.11 due to some compatibility concerns. You can read the Steering Council communication about it\xa0here\xa0to learn more.And now for something completely differentFor a Schwarzschild black hole (a black hole with no rotation or electromagnetic charge), given a free fall particle starting at the event horizon, the maximum propper time\xa0(which\xa0happens when it falls without angular velocity)\xa0it will experience to fall into\xa0the singularity is `π*M` (in natural units), where M is the mass of the black hole. For Sagittarius A* (the black hole at the centre of the milky way) this time is approximately 1 minute.Schwarzschild black holes are also unique because they have a space-like singularity at their core, which means that the singularity doesn\'t happen at a specific point in *space* but happens at a specific point in *time* (the future). This means once you are inside the event horizon you cannot point with your finger towards the direction the singularity is located because the singularity happens in your future: no matter where you move, you will "fall" into it.We hope you enjoy the new releases!Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.https://www.python.org/psf/Your friendly release team,Ned Deily @nad\xa0Steve Dower @steve.dower\xa0Pablo Galindo Salgado @pablogsal', 'Python 3.10.0rc2 is available', 'Python 3.10 is one month away, can you believe it? This snake is still trying to bite as it has been an interesting day of fighting fires, release blockers, and a bunch of late bugs but your friendly release team always delivers\xa0You can get this new release while is still fresh here:https://www.python.org/downloads/release/python-3100rc2/This release,\xa03.10.0rc2, is the last preview before the final release of Python 3.10.0 on 2021-10-04. Entering the release candidate phase, only reviewed code changes which are clear bug fixes are allowed between release candidates and the final release. There will be no ABI changes from this point forward in the 3.10 series and the goal is that there will be as few code changes as possible.Call to action\xa0\xa0\xa0\xa0\xa0The 3.10 branch is now accepting changes for 3.10.1. To maximize stability, the final release will be cut from the v3.10.0rc2 tag. If you need the release manager to cherry-pick any critical fixes, mark issues as release blockers and/or add him as a reviewer on a critical backport PR on GitHub.To see which changes are currently cherry-picked for inclusion in 3.10.0, look at the short-lived branch-v3.10.0\xa0https://github.com/python/cpython/tree/branch-v3.10.0\xa0on GitHub.\xa0\xa0\xa0\xa0\xa0Core developers: all eyes on the docs nowAre all\xa0your\xa0changes properly documented?Did you notice\xa0other\xa0changes you know of to have insufficient documentation?Community membersWe\xa0strongly encourage\xa0maintainers of third-party Python projects to prepare their projects for 3.10\xa0compatibilities during this phase. As always, report any issues to\xa0the Python bug tracker.Please keep in mind that this is a preview release and its use is **not** recommended for production environments.Major new features of the 3.10 series, compared to 3.9Many new features for Python 3.10 are still being planned and written. Among the new major new features and changes so far:PEP 623\xa0– Deprecate and prepare for the removal of the wstr member in PyUnicodeObject.PEP 604\xa0– Allow writing union types as X | YPEP 612\xa0– Parameter Specification VariablesPEP 626\xa0– Precise line numbers for debugging and other tools.PEP 618\xa0– Add Optional Length-Checking To zip.bpo-12782: Parenthesized context managers are now officially allowed.PEP 632\xa0– Deprecate distutils module.PEP 613\xa0– Explicit Type AliasesPEP 634\xa0– Structural Pattern Matching: SpecificationPEP 635\xa0– Structural Pattern Matching: Motivation and RationalePEP 636\xa0– Structural Pattern Matching: TutorialPEP 644\xa0– Require OpenSSL 1.1.1 or newerPEP 624\xa0– Remove Py_UNICODE encoder APIsPEP 597\xa0– Add optional EncodingWarning(Hey,\xa0fellow core developer,\xa0if a feature you find important is missing from this list,\xa0let Pablo know.)The next release will be the final release of Python 3.10.0, which is currently scheduled for Monday, 2021-10-04.bpo-38605:\xa0from __future__ import annotations\xa0(PEP 563) used to be on this list in previous pre-releases but it has been postponed to Python 3.11 due to some compatibility concerns. You can read the Steering Council communication about it\xa0here\xa0to learn more.More resourcesOnline DocumentationPEP 619, 3.10 Release ScheduleReport bugs at\xa0https://bugs.python.org.Help fund Python and its community.And now for something completely differentMaxwell’s demon is a thought experiment that would hypothetically violate the second law of thermodynamics. It was proposed by the physicist James Clerk Maxwell in 1867. In the thought experiment, a demon controls a small massless door between two chambers of gas. As individual gas molecules (or atoms) approach the door, the demon quickly opens and closes the door to allow only fast-moving molecules to pass through in one direction, and only slow-moving molecules to pass through in the other. Because the kinetic temperature of a gas depends on the velocities of its constituent molecules, the demon’s actions cause one chamber to warm up and the other to cool down. This would decrease the total entropy of the two gases, without applying any work, thereby violating the second law of thermodynamics.We hope you enjoy those new releases!Thanks to all of the many volunteers who help make Python Development and these releases possible! Please consider supporting our efforts by volunteering yourself or through organization contributions to the Python Software Foundation.Your friendly release team,Pablo Galindo @pablogsalNed Deily @nadSteve Dower @steve.dower', 'Python 3.7.12 and 3.6.15 security updates now available', 'Python\xa03.7.12\xa0and\xa03.6.15,\xa0\xa0the lastest security fix rollups for\xa0Python 3.7\xa0and\xa0Python 3.6,\xa0are now available. You can find the release files, links to the changelogs, and more information here:\xa0 \xa0\xa0https://www.python.org/downloads/release/python-3712/\xa0 \xa0\xa0https://www.python.org/downloads/release/python-3615/\xa0\xa0These releases are source code only; Windows and macOS binary installers are not provided for\xa0security fix\xa0releases.Note that\xa0Python 3.9\xa0is now the latest feature release series of Python 3. You should consider upgrading to 3.9 as soon as practical. Get the latest release of 3.9.x\xa0here.Thanks to all of the many volunteers who help make Python Development and these releases possible! \xa0Please consider supporting our efforts by volunteering yourself or through organization contributions to\xa0the Python Software Foundation.', 'Python 3.9.7 and 3.8.12 are now available', '\xa0Python 3.9.7', 'Python 3.9.7 is the newest major stable release of ', 'the Python programming language, and it contains many new features and ', 'On macOS, we encourage you to use the universal2 binary installer variant whenever possible. The legacy 10.9+ Intel-only variant will not be provided for Python 3.10 and the universal2 variant will become the default download for 3.9.8. You may need to upgrade third-party components, like pip,', 'The next Python 3.9 maintenance release will be 3.9.8, currently scheduled for 2021-11-01.', 'The Second Security-Only Release of Python 3.8', ' Python 3.8 is now in “security fixes only” stage of its life cycle: 3.8', 'irregularly in source-only form until October 2024. Python 3.8 isn’t ', ' provided for it. Python 3.8.10 was the last full bugfix release of Python 3.8 with binary installers.', 'Similarly to 3.8, Python 3.7 and 3.6 are now in “security fixes only”', ' stage of their life cycle. Python 3.7 will be providing source archives until June', ' 2023 while Python 3.6 ends its life in December 2021.', 'Subscribe to Python Insider via RSS, Email, or Twitter', 'Python-Dev mailing list', "Python Developer's Guide", 'Python-Dev Blogs', 'Creating Python Snaps', 'London Python Dojo December 2014', 'Python’s super() considered super!', 'Python 3.9.9 hotfix release is now available', 'Python 3.9.8 and 3.11.0a2 are now available', 'Python Insider by the Python Core Developers is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.Based on a work at blog.python.org.']
['Python Software Foundation - November 2021 Newsletter', "You can donate directly to the PSF! Click here to contribute any amount. Every dollar makes an impact on the PSF's financial stability and builds resources that benefit the whole Python community.", "Contributing to the PSF financially helps sustain programs that support the larger Python community. The PSF has made big strides this year, with two new paid roles dedicated to better responding to the Python community's needs in two critical areas: Python core development and Python Packaging. (You can read more about those initiatives below!) Going into 2022, we are looking forward to continuing that momentum, and we are thrilled to be gearing up for the first in-person PyCon in two years (!).", 'Your contributions help the PSF to be a steady, bedrock support for the Python community, and to keep investing resources into initiatives that improve the experience every day of Pythonistas around the world. ', "Did you see Python's new ranking?", "                            Following a long, steady climb up the ratings, Python has now topped TIOBE's Programming Community index, taking the position of the #1 most popular coding language in the world.", '"For the first time in more than 20 years we have a new leader of the pack: the Python programming language. The long-standing hegemony of Java and C is over. Python, which started as a simple scripting language, as an alternative to Perl, has become mature. Its ease of learning, its huge amount of libraries, and its widespread use in all kinds of domains, has made it the most popular programming language of today." --  Paul Jansen CEO TIOBE Software, October 2021', "This ranking reflects the immense progress the Python community has made through collective effort, and it's a sign of what an exciting time it is to be a part of the Python community.", 'Last call for Python Developers Survey!', '                            The Python Developer Survey helps the community better understand how Python is used and community trends. We will be closing the survey in about a week so if you have not yet participated in the survey, please do:\xa0https://surveys.jetbrains.com/s3/c1-python-developers-survey-2021', 'The PSF is proud to provide fiscal sponsorship to many Python projects and groups; you can learn more about each one, including options to donate here (https://www.python.org/psf/fiscal-sponsorees/).\xa0 During 2021, the PSF added Jazzband, PyPA, and PyRVA.\xa0 Here is information about a few upcoming events:', 'Copyright © 2021 Python Software Foundation, All rights reserved.']
['Python Insider: Python 3.9.9 hotfix release is now available', 'Python core development news and information.', 'Python 3.9.9 hotfix release is now available', 'Get it here: https://www.python.org/downloads/release/python-399/Python 3.9.9 is the eighth maintenance release of the legacy 3.9 series. Python 3.10 is now the latest feature release series of Python 3. Get the latest release of 3.10.x here.', '3.9.9 was released out of schedule as a hotfix for an argparse regression in Python 3.9.8 which caused complex command-line tools to fail recognizing sub-commands properly. Details in BPO-45235. There are only three other bugfixes in this release compared to 3.9.8. See the changelog for details on what changed.', 'Upgrading to 3.9.9 is highly recommended if you’re running Python 3.9.8.', 'The next Python 3.9 maintenance release will be 3.9.10, currently scheduled for 2022-01-03.', 'Subscribe to Python Insider via RSS, Email, or Twitter', 'Python-Dev mailing list', "Python Developer's Guide", 'Python-Dev Blogs', 'Creating Python Snaps', 'London Python Dojo December 2014', 'Python’s super() considered super!', 'Python 3.9.9 hotfix release is now available', 'Python 3.9.8 and 3.11.0a2 are now available', 'Python Insider by the Python Core Developers is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.Based on a work at blog.python.org.']
['Python Software Foundation News: Humphrey Butau Awarded the PSF Community Service Award for Q4 2020', '\xa0\xa0News from the Python Software Foundation', 'Humphrey Butau, web developer, PSF fellow, and PyCon Zimbabwe co-founder was awarded the Python Software Foundation 2020 Q4 Community Service Award.RESOLVED that the Python Software Foundation award the Q4 2020 Community Service Award to Humphrey Butau. Humphrey is the co-founder of PyCon Zimbabwe and was an early member of the Python community in Harare, Zimbabwe. He is a PSF fellow and has been stewarding our local community for a number of years. Humphrey is also a great speaker and has given talks at many conferences including keynoting DjangoCon Europe, speaking at PyCon Namibia and PyCon Italia.We interviewed Humphrey to learn more about his inspiration and work with the Python community. We also asked Anna Makarudze, a close associate of Humphrey, to share more light about Humphrey\'s community efforts and impact on the community.The Origin StoryWhat was your earliest memory of how you got into tech?\xa0I got into tech as an IT Help Desk Support and Technician. While doing this job, I started to learn Visual Basic for building applications on my own.\xa0A friend of mine later introduced me to Python in 2010, and I continued to teach myself programming.I later gave up as I didn\'t manage to make headway since I was doing these things on my own, and there were no other peers from whom I could get help if I got stuck.It was only in 2015 when I got a scholarship for an online Python and Django course with Treehouse that my coding journey continued in earnest.What was your earliest involvement with the Python community?In 2016 Anna Makarudze and I applied for and got financial assistance to attend PyCon Namibia in Windhoek. Although the financial aid was not enough to cover all our expenses if we took a flight to Namibia, we overlooked all that and took the alternative of a bus ride of 30 hours from Harare, Zimbabwe, to Windhoek, Namibia.Attending PyCon Namibia was more important for the Python community and us in Zimbabwe at the time. It was an opportunity to learn from the international Python community.We attended the conference, learned a lot, and met key people active in the global Python community. I am forever grateful to the organizers of PyCon Namibia 2016 as I believe it sparked the "Python revolution" in Africa, with PyCons in Ghana, Nigeria, Zimbabwe, and the first PyCon Africa Conference.The people as a source of inspirationWhat drives and inspires you to volunteer your time and resources to the PyCon Zimbabwe and the wider Python community?It is the people!What motivates me is what comes out of meeting people who share the same interests as me. The conferences, workshops, activities, and events are a huge platform for sharing information and building oneself career-wise.It is also heartwarming to hear people mention that their attendance at a Django Girls workshop encouraged them to pursue a career in programming.How has your involvement within the Python community helped your career?By being a member of the Python community, I have discovered so many possibilities that I might have never realized. I have learned a lot from the events that I have attended, and this has helped me have a clear picture of various roles that I can pursue.In 2019, I landed my first role as a software developer. I am sure this was possible through my involvement in the Python community.Coming from being a hobbyist programmer without Computer Science, my employer was willing to hire and mentor me.How has Covid affected your work with the Python community, and what steps are you taking to push the community forward during these trying times?Before March 2020, we were already facing challenges as a Python community in Zimbabwe.Covid-19 came and poured cold water on the steps that we were already taking to address these challenges. For the past one and half years, we put aside plans to hold in-person events as we put the health and well-being of members of our Python community first.We are currently discussing plans for holding virtual events and the improvement of the Covid-19 situation in Zimbabwe. We hope to get back to hybrid events in 2022.Impact story by Anna MakarudzeAs early as 2015, Humphrey had the vision to start a Python community in Zimbabwe to raise awareness for Python, a relatively new programming language in Zimbabwe.It is because of Humphrey\'s leadership that we were able to bring PyCon to Zimbabwe.Many of our community members, including myself, are working remotely due to Humphrey\'s work.I also got involved in community work like speaking at DjangoCon Europe and DjangoCon US, running PyLadies Harare for a few years, and becoming Django Software Foundation president because of Humphrey\'s work.There is no doubt that many of us in Zimbabwe are in the global Python/Django community because of Humphrey\'s vision of starting a community in Zimbabwe.The Python Software Foundation congratulates and celebrates Humphrey Butau.', 'The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.', 'Python Software Foundation', 'The Python Software Foundation is searching for it...']
['Python Software Foundation News: 2021 End of the year fundraiser!', '\xa0\xa0News from the Python Software Foundation', "Summary: The PSF launched its end-of-the-year fundraiser. There are two ways to donate: 1. donate directly to the PSF or 2. purchase a discounted PyCharm license, with all proceeds going to the PSF. Contributing to the PSF financially helps sustain programs that support the larger Python community.2021 is flying by! Regardless, the PSF made the best of this year by launching two critical initiatives thanks to Google's sponsorship and Bloomberg's grant. We're super happy to now support Python core development and Python Packaging in new ways:\xa0Core Development: In July 2021, the PSF hired its inaugural Developer-in-Residence, Łukasz Langa. Łukasz works full-time (one year term) to assist CPython maintainers and the Python Steering Council. Areas of responsibility include analytical research to understand the project's volunteer hours, investigating project priorities and tasks as we advance, and working on those priorities.\xa0Packaging: In August 2021, the PSF hired its first-ever Python Packaging Project Manager, Shamika Mohanan. Shamika is performing outreach to Python users to help the PSF better understand the landscape, identify fundable initiatives, seek grants, oversee funded projects, and report on their progress and results to improve Python packaging for all users.To continue the above initiatives, the PSF will need to generate USD 325,000 per year. To hire additional folks for either initiative (in demand), the PSF will need USD 500,000+ per year. The amount of funding required is in addition to funding needed to maintain PyCon US, our fiscal sponsor program, several working groups, an international grants program, a healthy financial reserve, and a growing staff to operate the PSF. Even if donations are a portion of the PSF's revenue, every dollar makes an impact and allows the PSF financial stability to continue supporting a growing community!Contributing to the PSF helps sustain programs that support the larger Python community. Donate today! \xa0Donate directly to the PSF\xa0or purchase a discounted PyCharm license, with all proceeds going to the PSF.", 'The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.', 'Python Software Foundation', 'The Python Software Foundation is searching for it...']
['Python Software Foundation News: 2021 End of the year fundraiser!', '\xa0\xa0News from the Python Software Foundation', "Summary: The PSF launched its end-of-the-year fundraiser. There are two ways to donate: 1. donate directly to the PSF or 2. purchase a discounted PyCharm license, with all proceeds going to the PSF. Contributing to the PSF financially helps sustain programs that support the larger Python community.2021 is flying by! Regardless, the PSF made the best of this year by launching two critical initiatives thanks to Google's sponsorship and Bloomberg's grant. We're super happy to now support Python core development and Python Packaging in new ways:\xa0Core Development: In July 2021, the PSF hired its inaugural Developer-in-Residence, Łukasz Langa. Łukasz works full-time (one year term) to assist CPython maintainers and the Python Steering Council. Areas of responsibility include analytical research to understand the project's volunteer hours, investigating project priorities and tasks as we advance, and working on those priorities.\xa0Packaging: In August 2021, the PSF hired its first-ever Python Packaging Project Manager, Shamika Mohanan. Shamika is performing outreach to Python users to help the PSF better understand the landscape, identify fundable initiatives, seek grants, oversee funded projects, and report on their progress and results to improve Python packaging for all users.To continue the above initiatives, the PSF will need to generate USD 325,000 per year. To hire additional folks for either initiative (in demand), the PSF will need USD 500,000+ per year. The amount of funding required is in addition to funding needed to maintain PyCon US, our fiscal sponsor program, several working groups, an international grants program, a healthy financial reserve, and a growing staff to operate the PSF. Even if donations are a portion of the PSF's revenue, every dollar makes an impact and allows the PSF financial stability to continue supporting a growing community!Contributing to the PSF helps sustain programs that support the larger Python community. Donate today! \xa0Donate directly to the PSF\xa0or purchase a discounted PyCharm license, with all proceeds going to the PSF.", 'The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.', 'Python Software Foundation', 'The Python Software Foundation is searching for it...']
['          Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design.']
['              for the Python community', 'WSGI server for Python 2/3 that runs on UNIX and Windows.', '            The Pylons Project is composed of a disparate group of project leaders with experience going back to the very start of Python web frameworks.']
['Bottle: Python Web Framework — Bottle 0.13-dev documentation', 'Bottle: Python Web Framework¶', 'Bottle is a fast, simple and lightweight WSGI micro web-framework for Python. It is distributed as a single file module and has no dependencies other than the Python Standard Library.', 'Run this script or paste it into a Python console, then point your browser to http://localhost:8080/hello/world. That’s it.', 'Install the latest stable release with pip install bottle or download bottle.py (unstable) into your project directory. There are no hard [1] dependencies other than the Python standard library. Bottle supports Python 2.7 and Python 3.', 'Deprecated since version 0.13: Support for Python 2.5 and 2.6 was dropped with this release.', '   Bottle is a fast, simple and lightweight WSGI micro web-framework for Python.']
['Tornado is a Python web framework and', 'Tornado is different from most Python web frameworks. It is not based', 'Prerequisites: Tornado 6.0 requires Python 3.5.2 or newer (See', 'compatibility with Python 2.7 is required). The following optional', 'tornado.wsgi — Interoperability with other Python frameworks and servers']
['Python Version', 'Configuring from Python Files']
['Free open source full-stack framework for rapid development of fast, scalable, secure and portable database-driven web-based applications. Written and programmable in Python (version 3 and 2.7).']
['TkInter - Python Wiki', 'Tkinter is Python\'s de-facto standard GUI (Graphical User Interface) package. It is a thin object-oriented layer on top of Tcl/Tk. Tkinter is not the only GuiProgramming toolkit for Python. It is however the most commonly used one. CameronLaird calls the yearly decision to keep TkInter "one of the minor traditions of the Python world." Tkinter Documentation Python and Tkinter Programming by John Grayson (see also GuiBooks). This book just recently came back into print on demand, see the publisher\'s website. Python GUI with Tkinter is a complete tutorial that covers all the widgets for the Tkinter library, complete with examples. Thinking in Tkinter is an introduction to some basic Tkinter programming concepts. TkDocs Tutorial, official Tkinter documentation that covers Python 3+ and Tk8.5, with easy to follow examples. Graphical User Interfaces with Tk, a chapter from the Python Documentation. Online Tcl/Tk Manual Pages - the official man pages at the Tcl Developer Xchange. Tips for Python/Tk by Andreas Balogh (about useful documentation, GUI builders and tips using Grid and HList widgets). The New Mexico Institute of Mining and Technology created its own Tkinter manual. It is available in HTML and PDF. The Tkinter Life Preserver, by Matt Conway is still useful, though way out of date. It\'s the only document that explains how to read the Tcl/Tk manuals and translate the information there to Tkinter calls. HTML version, converted by Ken Manheimer. The source: when all else fails: Read The Source, Luke! Demo/tkinter/ in the Python source distribution. This contains many helpful examples, including updated versions of Matt Conway\'s examples. Lib/lib-tk/Tkinter.py in any Python distribution. Other prominent Tcl/Tk sites: Tcl Developer Xchange Tcl project at SourceForge Tcl foundry at SourceForge Other Tcl/Tk related links: Simple toolsuite to create Tkinter GUIs on the fly from JSON files ', 'A good way to systematically check whether your Tkinter support is working is the following. Enter an interactive Python interpreter in a shell on an X console. ', 'Try the following command at the Python prompt: >>>\xa0import\xa0_tkinter\xa0#\xa0with\xa0underscore,\xa0and\xa0lowercase\xa0\'t\' If it works, go to step 2. If it fails with "No module named _tkinter", your Python configuration needs to be modified to include this module (which is an extension module implemented in C). Do **not** edit Modules/Setup (it is out of date). You may have to install Tcl and Tk (when using RPM, install the -devel RPMs as well) and/or edit the setup.py script to point to the right locations where Tcl/Tk is installed. If you install Tcl/Tk in the default locations, simply rerunning "make" should build the _tkinter extension. If it fails with an error from the dynamic linker, see above (for Unix, check for a header/library file mismatch; for Windows, check that the TCL/TK DLLs can be found). ', 'Try the correct command for your version at the Python prompt: >>>\xa0import\xa0Tkinter\xa0#\xa0no\xa0underscore,\xa0uppercase\xa0\'T\'\xa0for\xa0versions\xa0prior\xa0to\xa0V3.0 >>>\xa0import\xa0tkinter\xa0#\xa0no\xa0underscore,\xa0lowercase\xa0\'t\'\xa0for\xa0V3.0\xa0and\xa0later If it works, go to step 3. If it fails with "No module named Tkinter", your Python configuration need to be changed to include the directory that contains Tkinter.py in its default module search path. You have probably forgotten to define TKPATH in the Modules/Setup file. A temporary workaround would be to find that directory and add it to your PYTHONPATH environment variable. It is the subdirectory named "lib-tk" of the Python library directory (when using Python 1.4 or before, it is named "tkinter"). ', 'Try the correct command for your Python version at the Python prompt: >>>\xa0Tkinter._test()\xa0#\xa0note\xa0underscore\xa0in\xa0_test\xa0and\xa0uppercase\xa0\'T\'\xa0for\xa0versions\xa0prior\xa0to\xa0V3.0\xa0 >>>\xa0tkinter._test()\xa0#\xa0note\xa0underscore\xa0in\xa0_test\xa0and\xa0lowercase\xa0\'T\'\xa0for\xa0V3.0\xa0and\xa0later This should pop up a small window with two buttons. Clicking the "Quit" button makes it go away and the command return. If this works, you\'re all set. (When running this test on Windows, from Python run in a MS-DOS console, the new window somehow often pops up *under* the console window. This can also occur when using iTerm on Mac OS X. Move it aside or locate the Tk window in the Taskbar / Dock.) If this doesn\'t work, study the error message you get; if you can\'t see how to fix the problem, ask for help.  CategoryPyGUI TkInter  (last edited 2021-02-17 11:09:08 by ShadowClaw20017)', 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
[]
['Mu Python Editor', 'PyQt is a set of Python bindings for The Qt', 'bindings are implemented as a set of Python modules and contain over 1,000', 'cross-platform interpreted language Python.', 'able to generate Python code from Qt Designer.  It is also possible to add new', 'GUI controls written in Python to Qt Designer.', 'Python is a simple but powerful object-orientated language.  Its simplicity', 'can be created.  Its interpreted nature means that Python programmers are very', "Much of Python's power comes from its comprehensive set of extension modules", 'interfaces.  Extension modules are usually implemented in either Python, C or', 'library.  Used in this way, Python can then become the glue to create new', 'PyQt combines all the advantages of Qt and Python.  A programmer has all the', 'power of Qt, but is able to exploit it with the simplicity of Python.']
['Qt for Python - Qt Wiki', 'Qt for Python', '1 Qt for Python', '5 Contributing to the Qt for Python Wiki', 'Qt for Python', ' Qt for Python official logo. The Qt for Python project aims to provide a complete port of the PySide module to Qt. The development started on GitHub in May 2015. The project managed to port PySide to Qt 5.3, 5.4 & 5.5. During April 2016 The Qt Company decided to properly support the port (see details ).', "It doesn't support Python 2.7,", 'Dropped support for Python 3.5, keeping 3.6+ only (up to 3.9)', 'This wiki page tracks the progress of the Qt for Python project development and provides further information concerning the effort.', 'Qt for Python is available under LGPLv3/GPLv2 and commercial license for the following platforms:', 'Python 3.6+', '✦: 5.14 is the first version to support Python 3.8, but Python 3.8.0 will not work on Windows. Please use Python 3.8.1 or greater.', 'Porting docs | wiki: Porting an existing Qt/C++ application to Qt/Python the porting process.', 'Shiboken | wiki: general information about the Python binding generator.', 'Qt Forum: Qt for Python Subcategory', 'Matrix/Riot: #qt-pyside:matrix.org (Qt for Python)', 'Telegram Group: Qt for Python', ' Qt for Python Open Community Call', 'Qt for Python Development Progress Notes The most current view of the progress can be found in Jira: Unresolved issues and All issues (including resolved). The second link is useful to monitor the progress of the backlog. The best way to achieve this is to sort the list by the "Updated" column. Larger backlog/feature items are filed as "User Stories" in Jira.', 'Contributing to the Qt for Python Wiki', 'Please put any wiki pages related to Qt for Python into the "QtForPython" category by adding the following text to the top of the page:', 'When creating a new wiki page, please start the name with the prefix "Qt_for_Python/", so all the wiki page names will have the same structure and breadcrumbs are generated for easier navigation.', '\t\t\t\t\t\tRetrieved from "https://wiki.qt.io/index.php?title=Qt_for_Python&oldid=38738"\t\t\t\t\t', 'Category: Qt for Python ']
['Kivy: Cross-platform Python Framework for NUI Development', '                                Kivy - Open source Python library for rapid development of applications', '                                 He is a developer using Kivy with Python to automate scientific research. He lives in the eastern USA.', 'Utah Python August 2013 meeting ', '                                        Utah Python August 2013 meeting', 'OpenGL and Python on computer and embed devices', '                                        EuroPython 2012 in Florence, Italia.', 'Kivy - Python UI Library for Any OS', 'NIU en Python: Kivy', 'Spaß mit Natural User Interfaces und Python', 'Quick Multitouch Apps using Kivy and Python', 'GLES2 Python framework for NUI']
['Welcome to wxPython! | wxPython', 'wxPython Wiki', 'wxPython Bookshelf', 'wxPython-dev mail list', 'Welcome to wxPython!', 'This website is all about wxPython, the cross-platform GUI toolkit for the', 'Python language. With wxPython software developers can create truly native user', 'interfaces for their Python applications, that run with little or no', 'wxPython 4.1.1 Released', '                        The wxPython Team', 'wxPython 4.1.1 is now available at', 'Fixed issue that could modify bytes objects under Python. PR#1680', 'wxPython 4.1.0 Released', '                        The wxPython Team', 'wxPython 4.1.0 is now available at', 'Starting with this release wxPython has switched to tracking the wxWidgets', 'master branch (version 3.1.x) for the wxWidgets source code, which wxPython is', 'built upon, and which is included in the wxPython source archives.', 'This will be the last release to include binaries for Python 2.7. The code will', 'likely still compile and be compatible with Python 2.7 for some time, but no', 'Many of the deprecated items in wxWidgets and wxPython are being or have', '  wxPython for compatibility, but with a zero value. You can just stop using it', 'Replaced the Vagrant VMs used for building wxPython for various Linux distros', '  Graphics) files, and also code for integrating with wxPython. It can rasterize', 'Ported the embedding sample from Classic, which shows how to use wxPython from', '  a C++ wxWidgets application that embeds Python. PR#1353', '  wxPython will still be able to get access to it. #1126', 'wxPython 4.0.7.post2 Released', '                        The wxPython Team', 'wxPython 4.0.7.post2 is now available at ', ' wxPython Wiki', ' Discuss wxPython', 'Friends of wxPython', ' Mouse vs. Python', '            Contents © 2020  The wxPython Team - Powered by Nikola, Python and Magic. ']
['                      Fundamental algorithms for scientific computing in Python', 'SciPy wraps highly-optimized implementations written in low-level languages like Fortran, C, and C++. Enjoy the flexibility of Python with the speed of compiled code.']
['pandas - Python Data Analysis Library', 'built on top of the Python programming language.']
['Jupyter and the future of IPython — IPython', 'Support IPython', 'IPython provides a rich architecture for interactive computing with:', 'To get started with IPython in the Jupyter Notebook, see our official example', 'things you can do with IPython while learning about a variety of topics, from', 'To learn more about IPython, you can download our talks and presentations, or read', 'our extensive documentation. IPython is open source', 'list if it uses IPython as a library, and please don’t forget to cite the', 'IPython supports Python 2.7 and 3.3 or newer. Our older 1.x series supports', 'Python 2.6 and 3.2.', 'Jupyter and the future of IPython¶', 'IPython is a growing project, with increasingly language-agnostic components.', 'IPython 3.x was the last monolithic release of IPython,', 'As of IPython 4.0, the language-agnostic parts of the project:', 'IPython itself is focused on interactive Python,', 'part of which is providing a Python kernel for Jupyter.', 'IPython tends to be released on the last Friday of each month, this section updated rarely. Please have a look at the release history on PyPI.', 'IPython 7.12.0: Released on Jan 31st 2020.', 'IPython 7.11.0 and 7.11.1: Released on Dec 27, 2019 and Jan 1st 2020', 'IPython 7.10.0 and 7.10.1: Released on Nov 27, 2019 and Dec 1st 2019', 'IPython 7.9.0: Released on Oct 25, 2019', 'IPython 7.8.0: Released on Aug 30, 2019', 'IPython 7.7.0: Released on Jul 26, 2019', 'IPython 7.6.0 and 7.6.1: Released on June 28th, and July 3rd 2019.', 'IPython 7.5: fixes to issues brought by 7.4, documentation changes and other minor updates (April 25, 2019)', 'IPython 7.4: improvements to the completion system and miscellaneous fixes (March 21, 2019)', 'IPython 7.3: several bugfixes, minor improvements and Python 3.8 support (February 18, 2019)', 'IPython 7.2: minor bugfixes, improvements, and new configuration options', 'IPython 7.1: fixes to new features, internal refactoring,', 'IPython 7.0: major new features (September 27th, 2018).', 'IPython 6.5: minor bugfixes and Python 3.7 compatibility (July 28, 2018)', 'IPython 5.8: minor bugfixes (July 28, 2018)', 'IPython 6.4 and IPython 5.7: minor bugfixes (May 10, 2018)', 'IPython 6.3 and IPython 5.6: new features and bugfixes', 'IPython 6.0: This release, the first to require Python 3, integrates the', 'IPython 5.0: The release of IPython 5.0 brings a major revision of the', 'Book: Cyrille Rossant has published the second edition of the IPython minibook:', 'Learning IPython for Interactive Computing and Data Visualization,', 'from this book to support IPython’s development.', 'that features nearly 130 examples with IPython Notebook and a', 'example notebooks from its GitHub repository on IPython’s Notebook Viewer here.', 'Citing IPython¶', 'Several of the authors of IPython are connected with academic and scientific', 'If IPython contributes to a project that leads to a scientific publication,', '© Copyright the IPython development team.']
["BuildbotToggle navigationDiscover BuildbotBuildbot BasicsAutomated Build, Test, and ReleaseA Framework with Batteries IncludedAbout UsContactSuccess storiesPressMetabuildbot: Buildbot's BuildbotGet StartedFollow the TutorialRead the DocsDownload and InstallGet InvolvedJoin the Mailing List..or #buildbot on IRCGet the SourceGet Started HackingFile or Fix a BugBlogFork me on GitHub!Buildbot is dropping support for Python 2.7 for the master. Users are encouraged to migrate to Python 3 as soon as possible.More infoBuildbot BasicsBuildbot is an open-source framework for automating", 'You configure Buildbot by providing a Python configuration script to the master.', 'This script can be very simple, configuring built-in components, but the full expressive power of Python is available.', 'The framework itself is implemented in Twisted Python, and compatible with all major operating systems.', 'This flexibility has led to its use in a number of high-profile open-source projects, including WebKit, Python, and Twisted.']
[]
['Python 2 and Python 3 support']
[]
[]
['The Xonsh Shell — Python-powered shell', 'XONSH is a Python-powered shell', 'Xonsh is a Python-powered, cross-platform, Unix-gazing shell language and command prompt. The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython.', 'The xonsh shell lets you easily mix Python and shell commands in a powerful and simplified approach to the command line.', 'Xonsh is Python', 'The xonsh language is a superset of Python 3.6+ and you can run Python code and import modules. Read more →', 'Xonsh is the Shell in Python', 'With xonsh you can combine Python with shell commands. Read more →', 'Xonsh is Python in the Shell', 'Prepare environment variables and arguments in Python and use them in shell commands. Read more →', 'Combine shell commands with Python or vice versa.', 'The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython.', '                                        The xonsh AppImage file contains both xonsh and Python and allows xonsh to be run on any AppImage-supported Linux distribution without installation or root access.', 'Let your pipe lines from the standard output flow thru the Python code in the xonsh shell. ', "We're listing down the top 10 trending open-source projects In Python on GitHub and the xonsh shell is one of these projects."]
['Get the Python Brochure Vol.1 as download! — ', '                    Get the Python Brochure Vol.1 as download!', 'The first run of the printed edition was successfully released in 2014 at the\xa0PyCon\xa0in Montreal. After that we distributed this excellent showcase of Python to major computing conferences around the world. We were proud to offer to ship the second print run until end of 2016. We have send all our copies to your local events and shows around Python over the whole world. Since then it is still a growing technology that powers the web and science & engineering in both education and production.', 'You can download the\xa0Python brochure as\xa0the latest updated screen resolution PDF\xa0suitable for electronic distribution and is well suited for low resolution printing on A4 as a A5 folded brochure booklet. The original printed issue was 32 pages, A4, full-color.', "Let's make Python strengths and quality more visible for new audiences!", "The Python Software Foundation (PSF) has collected success stories and case studies over the last two years and we've created a beautiful, professional quality printed brochure to promote the usage of Python to audiences which we are currently not reaching well.", '            Newsletter #9:  PSF Python Brochure: Get your free copy at PyCon 2015', '            Newsletter #8: PSF Python Brochure "sold out" - help us kick start the second print run !', '            Newsletter #7: The Python Brochure is out – Get your copy in Montreal!', '            Newsletter #6: PSF Python Brochure – Last call for Ad Sponsors', '            Newsletter #5 – Python Brochure available as PDF preview. Last chance to order your ad!', 'Python Software Foundation', 'Foundation at Python.org', 'PSF Python Brochure Vol. I final Download', '      Powered by Plone & Python']
['History and License — Python 3.10.0 documentation', 'Terms and conditions for accessing or otherwise using Python', 'Distributing Python Modules (Legacy version)', 'Python »', 'Python was created in the early 1990s by Guido van Rossum at Stichting', 'successor of a language called ABC.  Guido remains Python’s principal author,', 'In 1995, Guido continued his work on Python at the Corporation for National', 'In May 2000, Guido and the Python core development team moved to BeOpen.com to', 'form the BeOpen PythonLabs team.  In October of the same year, the PythonLabs', 'https://www.zope.org/).  In 2001, the Python Software Foundation (PSF, see', 'specifically to own Python-related Intellectual Property.  Zope Corporation is a', 'All Python releases are Open Source (see https://opensource.org/ for the Open', 'Source Definition). Historically, most, but not all, Python releases have also', 'GPL-compatible doesn’t mean that we’re distributing Python under the GPL.  All', 'Python licenses, unlike the GPL, let you distribute a modified version without', 'combine Python with other software that is released under the GPL; the others', 'Terms and conditions for accessing or otherwise using Python¶', 'Python software and documentation are licensed under the', 'Starting with Python 3.8.6, examples, recipes, and other code in', 'Some software incorporated into Python is under different licenses.', '1. This LICENSE AGREEMENT is between the Python Software Foundation ("PSF"), and', '   the Individual or Organization ("Licensee") accessing and otherwise using Python', '   distribute, and otherwise use Python 3.10.0 alone or in any derivative', '   copyright, i.e., "Copyright © 2001-2021 Python Software Foundation; All Rights', '   Reserved" are retained in Python 3.10.0 alone or in any derivative version', '   incorporates Python 3.10.0 or any part thereof, and wants to make the', '   agrees to include in any such work a brief summary of the changes made to Python', '4. PSF is making Python 3.10.0 available to Licensee on an "AS IS" basis.', '8. By copying, installing or otherwise using Python 3.10.0, Licensee agrees', '2. Subject to the terms and conditions of this BeOpen Python License Agreement,', '   version, provided, however, that the BeOpen Python License is retained in the', '   third party.  As an exception, the "BeOpen Python" logos available at', '   otherwise using Python 1.6.1 software in source or binary form and its', '   distribute, and otherwise use Python 1.6.1 alone or in any derivative version,', '   Rights Reserved" are retained in Python 1.6.1 alone or in any derivative version', '   Licensee may substitute the following text (omitting the quotes): "Python 1.6.1', '   Agreement.  This Agreement together with Python 1.6.1 may be located on the', '   incorporates Python 1.6.1 or any part thereof, and wants to make the derivative', '   include in any such work a brief summary of the changes made to Python 1.6.1.', '4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS" basis.  CNRI', '   Notwithstanding the foregoing, with regard to derivative works based on Python', '   or otherwise using Python 1.6.1, Licensee agrees to be bound by the terms and', 'for third-party software incorporated in the Python distribution.', 'Python 2.2 license.', 'Permission to use, copy, modify, and distribute this Python software and', '- Arguments more compliant with Python standard', 'The file Python/pyhash.c contains Marek Majkowski’ implementation of', 'The file Python/dtoa.c, which supplies C functions dtoa and', 'Python may include a copy of the OpenSSL libraries, so we include a copy', 'Terms and conditions for accessing or otherwise using Python', 'Distributing Python Modules (Legacy version)', 'Python »', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['BeginnersGuide - Python Wiki', "Beginner's Guide to Python", 'New to programming? Python is free and easy to learn if you know where to start! This guide will help you to get started quickly. Chinese Translation ', 'New to Python?', 'Read BeginnersGuide/Overview for a short explanation of what Python is. ', 'Getting Python', "Next, install the Python 3 interpreter on your computer. This is the program that reads Python programs and carries out their instructions; you need it before you can do any Python programming. Mac and Linux distributions may include an outdated version of Python (Python 2), but you should install an updated one (Python 3). See BeginnersGuide/Download for instructions to download the correct version of Python. There are also Python interpreter and IDE bundles available, such as Thonny. Other options can be found at IntegratedDevelopmentEnvironments. At some stage, you'll want to edit and save your program code. Take a look at HowToEditPythonCode for some advice and recommendations. ", 'Learning Python', "Next, read a tutorial and try some simple experiments with your new Python interpreter. If you have never programmed before, see BeginnersGuide/NonProgrammers for a list of suitable tutorials. If you have previous programming experience, consult BeginnersGuide/Programmers, which lists more advanced tutorials. If English isn't your first language, you might be more comfortable with a tutorial that's been translated into your language. Consult python.org's list of Non-English resources. Most tutorials assume that you know how to run a program on your computer. If you are using Windows and need help with this, see How do I Run a Program Under Windows. Some sites offer in-browser coding for those who want to learn Python: please keep this list alphabetized Codecademy Coding Bootcamps DataCamp Dataquest for Python for data science. HackInScience free and open source platform. High School Technology Services for general Python Print a cheat sheet of the most important Python features and post it to your office wall until you know the basics well. Once you have read a tutorial, you can browse through Python's online documentation. It includes a tutorial that might come in handy, a Library Reference that lists all of the modules that come standard with Python, and the Language Reference for a complete (if rather dry) explanation of Python's syntax. When you are ready to write your first program, you will need a text editor or an IDE. If you don't want to use Thonny or something more advanced, then you can use IDLE, which is bundled with Python and supports extensions. This Python wiki also contains a page about Python One-Liners -- an obscure but interesting subculture in Python. ", "Need help with any of this? Read BeginnersGuide/Help for mailing lists and newsgroups. Most Python books will include an introduction to the language; see IntroductoryBooks for suggested titles. Consult BeginnersGuide/Examples for small programs and little snippets of code that can help you learn. Or, if you prefer to learn Python through listening to a lecture, you can attend a training course or even hire a trainer to come to your company. Consult the PythonEvents page to see if any training courses are scheduled in your area and the PythonTraining page for a list of trainers. Teachers can join the EDU-SIG, a mailing list for discussion of Python's use in teaching at any level ranging from K-12 up to university. ", 'BeginnersGuide/DownloadBeginnersGuide/ExamplesBeginnersGuide/HelpBeginnersGuide/MathematicsBeginnersGuide/NonProgrammersBeginnersGuide/OverviewBeginnersGuide/ProgrammersBeginnersGuide/Programmers (Cpp2Python.pdf)BeginnersGuide/Programmers/SimpleExamples', 'Finxter - How good are your Python skills? Test and Training with a Daily Python Puzzle CheckIO - Online learning, testing and improving your python skills After Hours Programming - Python Quiz Python Guru Quiz- Python Quiz Pyschools - A Collection of Python Quiz and Exercise Questions PyGUI - Collection of python quiz answers, Examples And GUI Tkinter Tutorials For Beginners Pythonspot - Python Quiz Python Challenge - A Python Quiz App on Android Platform CS Circles - online lessons and graded exercises ', 'Python Style Checker', 'Pythonchecker.com - An educative online tool to rate your Python style (with dynamic score computation and hints) ', 'Looking for a particular Python module or application?', 'The first place to look is the Python Package Index. If you can\'t find anything relevant in the Package Index, try searching python.org - you can find anything mentioned on the Python site, in the FAQs, or in the newsgroup. More info: where to search. You may also try our external guest project, pydoc.net, for advanced package and module search. Next, try Google or another search engine of your choice. Searching for "python" and some relevant keywords will usually find something helpful. Finally, you can try posting a query to the comp.lang.python Usenet group. ', 'Python-Related Cheat Sheets', 'Python: Collection of 11 Best Python Cheat Sheets NumPy: Collection of 10 Best NumPy Cheat Sheets Pandas: Collection of 7 Beautiful Pandas Cheat Sheets Machine Learning: Collection of 15 Machine Learning Cheat Sheets ', "Python is a product of the Python Software Foundation, a non-profit organization that holds the copyright. Donations to the PSF are tax-deductible in the USA, and you can donate via credit card or PayPal. To report a bug in the Python core, use the Python Bug Tracker. To contribute a bug fix or other patch to the Python core, read the Python Developer's Guide for more information about Python's development process. To contribute to the official Python documentation, join the Documentation SIG, write to docs@python.org , or use the Issue Tracker to contribute a documentation patch. To announce your module or application to the Python community, use comp.lang.python.announce. See the guide to Python mailing lists for more information. To propose changes to the Python core, post your thoughts to comp.lang.python. If you have an implementation, follow the Python Patch Guidelines. If you have a question are not sure where to report it, check out the WhereDoIReportThis? page.  CategoryDocumentation BeginnersGuide  (last edited 2020-07-04 14:00:41 by ChrisM)", 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
["Python Developer's Guide", "Python Developer's Guide ", "Python Developer's Guide ", 'Documenting Python', 'Following Python’s Development', 'Porting Python to a new platform', 'Changing the Python Language', 'Exploring CPython’s Internals', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Changing Python’s C API', 'Python Developer’s Guide¶', 'to Python – for both new and experienced contributors. It is', 'community that maintains Python.  We welcome your contributions to Python!', 'Fork the CPython repository', 'Build Python, on UNIX and Mac OS use:', 'contributing to Python:', 'PEPs (Python Enhancement Proposals)', 'Status of Python branches¶', 'The main branch is currently the future Python 3.11, and is the only', 'branch that accepts new features.  The latest release for each Python', 'but can be adjusted by the release manager of each branch.  All Python 2', 'We encourage everyone to contribute to Python and that’s why we have put up this', 'this guide, then the Core Python Mentorship group is available to help guide new', 'A number of individuals from the Python community have contributed to a series', 'Guide for contributing to Python:', 'Documenting Python', 'Following Python’s Development', 'contributors will build understanding of the CPython workflow by reading the', 'Proposing changes to Python itself¶', 'Improving Python’s code, documentation and tests are ongoing tasks that are', 'never going to be “finished”, as Python operates as part of an ever-evolving', 'necessary maintenance activities is finding ways to make Python, in the form of', 'Changing the Python Language', 'This guide is specifically for contributing to the Python reference interpreter,', 'also known as CPython (while most of the standard library is written in Python,', 'There are other Python implementations, each with a different focus.  Like', 'CPython, they always have more things they would like to do than they have', 'PyPy: A Python interpreter focused on high speed (JIT-compiled) operation', 'Jython: A Python interpreter focused on good integration with the Java', 'IronPython: A Python interpreter focused on good integration with the', 'Stackless: A Python interpreter focused on providing lightweight', 'microthreads while remaining largely compatible with CPython specific', 'PEP 8 (Style Guide for Python Code)', 'PEPs (Python Enhancement Proposals)', 'Exploring CPython’s Internals', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Python Software Foundation-supported', 'which includes all infrastructure used in the development of Python itself', 'Python Documentation', 'Documenting Python', 'Python triage team', 'Becoming a member of the Python triage team', 'Following Python’s Development', 'Porting Python to a new platform', 'Updating NEWS and What’s New in Python', 'Changing the Python Language', 'Exploring CPython’s Internals', 'CPython Source Code Layout', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Changing Python’s C API', 'Python Build Setup', 'Building Python', 'Forking CPython GitHub Repository', 'Cloning a Forked CPython Repository', 'Updating your CPython Fork', 'Documenting Python and style guide', '              Copyright © 2011-2021, Python Software Foundation |', 'Python Developer’s Guide', 'Status of Python branches', 'Proposing changes to Python itself']
['Python Frequently Asked Questions — Python 3.10.0 documentation', 'General Python FAQ', 'Python »', 'Python Frequently Asked Questions', 'Python Frequently Asked Questions¶', 'General Python FAQ', 'Python on Windows FAQ', '“Why is Python Installed on my Computer?” FAQ', 'General Python FAQ', 'Python »', 'Python Frequently Asked Questions', '    © Copyright 2001-2021, Python Software Foundation.', '    This page is licensed under the Python Software Foundation License Version 2.', '    The Python Software Foundation is a non-profit corporation.']
['Languages - Python Wiki', "Attempt to have languages and links listed in the native tongue of the user. 2009-09-01 This page's links go to the various languages' pages, most of which have been copied from the other set of language pages, with a few updates.  Ideally, all the pages should be like the Polish or Turkish pages - all native language, only the necessary English. There are some groundrules, some laid down by the site admins, some my suggestions: Pages must be named in ASCII and English (PolishLanguage) Pages must have an explanation in English at the top (Links to Python information in <language X>) (my suggestion) We probably want to limit invites to edit the pages to people we know well, or Pythonistas with a track record.  Hopefully this is inclusive enough without opening the site up to a spam flood and vandalismfest. Where these pages really need help: check links, remove broken ones. add new links that are quality Python information and active. some care for languages that have next to nothing, but do have people in the Python community - even a link to the Wikipedia page for Python, in that language, is a start (Some are pretty complete and of high quality - the Russian language Wikipedia page for Python, for instance, packs a lot in). ", 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['PEP 0 -- Index of Python Enhancement Proposals (PEPs) | Python.org', 'Python', '▲ The Python Network', 'Python Brochure', 'Python Books', 'Python Essays', 'Python Conferences', 'Python Logo', 'Python Wiki', 'Python News', 'Python Events', 'Python Events Archive', 'Python>>>', "Python Developer's Guide>>>", 'PEP 0 -- Index of Python Enhancement Proposals (PEPs)', 'PEP 0 -- Index of Python Enhancement Proposals (PEPs)', 'Title:Index of Python Enhancement Proposals (PEPs)', 'This PEP contains the index of all Python Enhancement Proposals,', 'Style Guide for Python Code', 'Python Language Governance', 'The Zen of Python', 'Doing Python Releases 101', 'Python Database API Specification v1.0', 'Python Database API Specification v2.0', 'Backward Compatibility for the Python 2 Standard ...', 'Python Web Server Gateway Interface v1.0', 'Pure Python/C Accelerator Module Compatibility ...', 'Python 2.8 Un-release Schedule', 'Provisional packages in the Python standard library', 'Migrating to Python 3 as the default online ...', 'Python 3.5 Release Schedule', 'Python 3.6 Release Schedule', 'Dependency specification for Python Software Packages', 'Python registration in the Windows registry', 'Python 3.7 Release Schedule', 'Python 3.8 Release Schedule', 'Python 3.9 Release Schedule', 'Annual Release Cycle for Python', "Reducing CPython's Feature Delivery Latency", 'Unicode-related Security Considerations for Python', 'Python Web Server Gateway Interface v1.0.1', 'Python Language Governance Proposal Overview', 'Python Positional-Only Parameters', 'Python Runtime Audit Hooks', 'Vectorcall: a fast calling protocol for CPython', 'New PEG parser for CPython', 'Python local packages directory', 'Python 3.10 Release Schedule', 'Metadata for Python Software Packages 2.2', 'Specifying Installer Requirements for Python Projects', 'Python 3.11 Release Schedule', 'A file format to list Python dependencies for ...', 'Graceful cooperation between external and Python ...', 'Convert macros to functions in the Python C API', 'Python Unicode Integration', 'Using Distutils to Build Python', 'Metadata for Python Software Packages', 'Defining Python Source Code Encodings', 'Metadata for Python Software Packages v1.1', 'Metadata for Python Software Packages 1.2', 'Database of Installed Python Distributions', 'Python launcher for Windows', 'Python Virtual Environments', 'Explicit Unicode Literal for Python 3.3', 'Adding an Enum type to the Python standard library', 'Improving Python ZIP Application Support', 'Add new APIs to customize Python memory allocators', 'Explicit bootstrapping of pip in Python installations', 'Add a new tracemalloc module to trace Python memory ...', 'Network Security Enhancements for Python 2.7.x', 'Backport ensurepip (PEP 453) to Python 2.7', 'Make the Python Launcher aware of virtual environments', 'HTTPS verification migration tools for Python 2.7', 'Adding a frame evaluation API to CPython', 'A New C-API for Thread-Local Storage in CPython', 'Metadata for Python Software Packages 2.1', 'Python Initialization Configuration', 'Raising Exceptions in Python 3000', 'Catching Exceptions in Python 3000', 'Simple input built-in in Python 3000', 'Bytes literals in Python 3000', 'Metaclasses in Python 3000', 'String representation in Python 3000', 'IP Address Manipulation Library for the Python ...', 'Python 1.6 Release Schedule', 'Python 2.0 Release Schedule', 'Python 2.1 Release Schedule', 'Python 2.2 Release Schedule', 'Python 2.3 Release Schedule', 'Python 2.4 Release Schedule', 'Migrating the Python CVS to Subversion', 'Python 2.5 Release Schedule', 'Python 2.6 and 3.0 Release Schedule', 'Python 2.7 Release Schedule', 'Choosing a distributed VCS for the Python project', 'Python 3.1 Release Schedule', 'Python 3.2 Release Schedule', 'Python 3.3 Release Schedule', 'Python 3.4 Release Schedule', 'Python Documentation Translations', 'Using GitHub Issues for CPython', 'Python 3000', 'Python Language Moratorium', 'Things that will Not Change in Python 3000', 'Miscellaneous Python 3.0 Plans', 'Python Governance Voting Process', 'Stackless Python', 'Python Online Help', 'A Database of Installed Python Packages', 'Pgen Module for Python', 'Programming by Contract for Python', 'Python Web3 Interface', 'Doing Python Micro Releases', 'Python Advanced Library', "Reworking Python's Numeric Model", 'Adding a Rational Type to Python', 'Adding a Rational Literal to Python', 'Python Interface Syntax', "How to Change Python's Grammar", 'Adding Roman Numeral Literals to Python', 'Python Synchronize/Asynchronize Block', 'Python Bytecode Verification', 'Design of the CPython Compiler', 'Exception Reorganization for Python 3.0', 'Enumerations in Python', 'Faster evolution of the Python Standard Library', 'Metadata for Python Software Packages 2.0', 'Restructuring the CPython startup sequence', 'Inclusion of implicit pip bootstrap in Python ...', 'Standard Metadata Extensions for Python Software ...', 'Core development workflow automation for CPython', 'Migration of dict iteration code to Python 3', 'Migrate CPython to Git, Github, and Phabricator', 'Migrate CPython to Git and GitLab', 'A Unified TLS API for Python', 'Backport ssl.MemoryBIO and ssl.SSLObject to Python 2.7', 'Security transparency in the Python runtime', 'A Concurrency Memory Model for Python', 'A rolling feature release stream for CPython', 'Python Compatibility Version', 'Coordinated Python release', 'Merging Unladen Swallow into CPython', 'Python Governance Model Lead by Trio of Pythonistas', 'Organization of the Python community', 'Style Guide for Python Code', 'Python Language Governance', 'The Zen of Python', 'Python Unicode Integration', 'Doing Python Releases 101', 'Doing Python Micro Releases', 'Python 1.6 Release Schedule', 'Python 2.0 Release Schedule', 'Python Advanced Library', 'Stackless Python', 'Python 2.1 Release Schedule', "Reworking Python's Numeric Model", 'Using Distutils to Build Python', 'Python Online Help', 'Adding a Rational Type to Python', 'Adding a Rational Literal to Python', 'Metadata for Python Software Packages', 'Python Interface Syntax', 'Python Database API Specification v1.0', 'Python Database API Specification v2.0', 'Python 2.2 Release Schedule', 'A Database of Installed Python Packages', 'Defining Python Source Code Encodings', 'Pgen Module for Python', 'Python 2.3 Release Schedule', 'Backward Compatibility for the Python 2 Standard ...', "How to Change Python's Grammar", 'Adding Roman Numeral Literals to Python', 'Metadata for Python Software Packages v1.1', 'Programming by Contract for Python', 'Python Synchronize/Asynchronize Block', 'Python 2.4 Release Schedule', 'Python Bytecode Verification', 'Python Web Server Gateway Interface v1.0', 'Design of the CPython Compiler', 'Metadata for Python Software Packages 1.2', 'Migrating the Python CVS to Subversion', 'Exception Reorganization for Python 3.0', 'Enumerations in Python', 'Python 2.5 Release Schedule', 'Python 2.6 and 3.0 Release Schedule', 'Python 2.7 Release Schedule', 'Choosing a distributed VCS for the Python project', 'Python 3.1 Release Schedule', 'Database of Installed Python Distributions', 'Python 3.2 Release Schedule', 'Python launcher for Windows', 'Python 3.3 Release Schedule', 'Pure Python/C Accelerator Module Compatibility ...', 'Python 2.8 Un-release Schedule', 'Python Virtual Environments', 'Provisional packages in the Python standard library', 'Faster evolution of the Python Standard Library', 'Explicit Unicode Literal for Python 3.3', 'Metadata for Python Software Packages 2.0', 'Python 3.4 Release Schedule', 'Migrating to Python 3 as the default online ...', 'Restructuring the CPython startup sequence', 'Adding an Enum type to the Python standard library', 'Inclusion of implicit pip bootstrap in Python ...', 'Improving Python ZIP Application Support', 'Python Web3 Interface', 'Add new APIs to customize Python memory allocators', 'Explicit bootstrapping of pip in Python installations', 'Add a new tracemalloc module to trace Python memory ...', 'Standard Metadata Extensions for Python Software ...', 'Core development workflow automation for CPython', 'Network Security Enhancements for Python 2.7.x', 'Migration of dict iteration code to Python 3', 'Backport ensurepip (PEP 453) to Python 2.7', 'Python 3.5 Release Schedule', 'Migrate CPython to Git, Github, and Phabricator', 'Make the Python Launcher aware of virtual environments', 'HTTPS verification migration tools for Python 2.7', 'Python 3.6 Release Schedule', 'Migrate CPython to Git and GitLab', 'Dependency specification for Python Software Packages', 'Python registration in the Windows registry', 'Adding a frame evaluation API to CPython', 'Python 3.7 Release Schedule', 'A New C-API for Thread-Local Storage in CPython', 'A Unified TLS API for Python', 'Python Documentation Translations', 'Backport ssl.MemoryBIO and ssl.SSLObject to Python 2.7', 'Security transparency in the Python runtime', 'Metadata for Python Software Packages 2.1', 'Python 3.8 Release Schedule', 'Python Positional-Only Parameters', 'Python Runtime Audit Hooks', 'Using GitHub Issues for CPython', 'Python local packages directory', 'A Concurrency Memory Model for Python', 'Python Initialization Configuration', 'Vectorcall: a fast calling protocol for CPython', 'Python 3.9 Release Schedule', 'Annual Release Cycle for Python', 'A rolling feature release stream for CPython', 'Python Compatibility Version', "Reducing CPython's Feature Delivery Latency", 'Coordinated Python release', 'New PEG parser for CPython', 'Python 3.10 Release Schedule', 'Metadata for Python Software Packages 2.2', 'Specifying Installer Requirements for Python Projects', 'Python 3.11 Release Schedule', 'A file format to list Python dependencies for ...', 'Graceful cooperation between external and Python ...', 'Convert macros to functions in the Python C API', 'Unicode-related Security Considerations for Python', 'Python 3000', 'Python Language Moratorium', 'Things that will Not Change in Python 3000', 'Miscellaneous Python 3.0 Plans', 'Raising Exceptions in Python 3000', 'Catching Exceptions in Python 3000', 'Simple input built-in in Python 3000', 'Bytes literals in Python 3000', 'Metaclasses in Python 3000', 'String representation in Python 3000', 'IP Address Manipulation Library for the Python ...', 'Merging Unladen Swallow into CPython', 'Python Web Server Gateway Interface v1.0.1', 'Python Language Governance Proposal Overview', 'Python Governance Voting Process', 'Python Governance Model Lead by Trio of Pythonistas', 'Organization of the Python community', 'and community, The Python core team', 'The Python Software Foundation is the organization behind Python. Become a member of the PSF and help advance the software and our mission. ', 'Python Brochure', 'Python Books', 'Python Essays', 'Python Conferences', 'Python Logo', 'Python Wiki', 'Python News', 'Python Events', 'Python Events Archive', '                            \xa0Python Software Foundation']
['PythonBooks - Python Wiki', 'PythonBooks', 'PythonBooks', 'FrontPageRecentChangesFindPageHelpContentsPythonBooks', "There are a variety of books about Python.  Here's a guide to them: IntroductoryBooks (gentle overviews of the language) AdvancedBooks (for when you don't want gentle) ReferenceBooks (much information in a small space) Specific applications: GameProgrammingBooks NetworkProgrammingBooks GuiBooks JythonBooks ScientificProgrammingBooks SystemAdministrationBooks WebProgrammingBooks WindowsBooks XmlBooks ZopeBooks Books in languages other than English: UkrainianPythonBooks DutchPythonBooks FrenchPythonBooks GermanPythonBooks GreekPythonBooks HungarianPythonBooks JapanesePythonBooks KoreanPythonBooks RussianPythonBooks PersianPythonBooks PolishPythonBooks PortuguesePythonBooks ArabicPythonBooks SpanishPythonBooks When you see a book you like, don't hesitate to add your recommendation! There's also a Courses page, filled with links to video courses. External sources of information about (Python) books: PythonBooks.org - A collection of Python books featuring popularity based ranking. List of Free Python Books - A collection of Python books to Master Python. Computer-Books.china - A collection of Python books 101+ Free Python Books - You don't have to pay money to read great Python books. Many are free! There is also a list of OutOfPrintBooks. PythonBooks  (last edited 2021-10-20 13:15:16 by Srinivas Ramakrishna)", 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['FrontPage - Python Wiki', 'The Python Wiki', "Welcome to the Python Wiki, a user-editable compendium of knowledge based around the Python programming language. Some pages are protected against casual editing - see WikiEditingGuidelines for more information about editing content. Python is a great object-oriented, interpreted, and interactive programming language. It is often compared (favorably of course  ) to Lisp, Tcl, Perl, Ruby, C#, Visual Basic, Visual Fox Pro, Scheme or Java... and it's much more fun. Python combines remarkable power with very clear syntax. It has modules, classes, exceptions, very high level dynamic data types, and dynamic typing. There are interfaces to many system calls and libraries, as well as to various windowing systems. New built-in modules are easily written in C or C++ (or other languages, depending on the chosen implementation). Python is also usable as an extension language for applications written in other languages that need easy-to-use scripting or automation interfaces.  Getting Started ", 'Python Books ', 'Books about Python plus reviews ', 'Python Audio Materials ', 'Python Implementations ', 'Different software which runs programs in the Python language ', 'Python Conferences - information about the Python conference scene Local User Groups - find a Python group near you Python Training - Python training courses Python Events - event listing for conferences, training courses and more Python Event Calendars - calendars for Python conferences and user groups Participating in the Community - where people using and producing Python get together Python Software Foundation - show your support by joining the Foundation behind Python Find a job where you can use Python - Python job boards around the world  ', 'Python Software', ' Python Projects ', ' Information on finding software projects written in Python, including... ', 'Python Editors ', ' Ready-to-run applications which use Python ', 'Publishing Python Modules ', 'Python Core Development Tools', ' The Python Web Site ', ' Maintaining the official Python online resources ', 'Roundup and the code review services used by the Python project ', ' The infrastructure behind Python package hosting ', 'This Wiki is a community place to gather and organize all things about Python. Feel free to exercise your editorial skills and expertise to make it a useful knowledge base and up-to-date reference on all Python-related topics. There are some guidelines describing the policies and rules governing this Wiki and how you can most effectively contribute to it. A list of site improvements describes various tasks where your help would be appreciated. To keep up with changes on this site, check RecentChanges frequently or follow it using RSS: RSS feed. ', 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
['Planet Python', 'Planet Python', 'All with pytest. So cool.Special Guest: Prayson Daniel.Sponsored By:PyCharm Professional: Try PyCharm Pro for 4 months and learn how PyCharm will save you time.Support Test & Code in PythonLinks:Python Bytes 250, with Prayson Daniel — Listen to this for more of an introduction to Prayson<p>Prayson Daniel, a principle data scientist, discusses testing machine learning pipelines with pytest.</p>', '<p>All with pytest. So cool.</p><p>Special Guest: Prayson Daniel.</p><p>Sponsored By:</p><ul><li><a href="https://testandcode.com/pycharm" rel="nofollow">PyCharm Professional</a>: <a href="https://testandcode.com/pycharm" rel="nofollow">Try PyCharm Pro for 4 months and learn how PyCharm will save you time.</a></li></ul><p><a href="https://www.patreon.com/testpodcast" rel="payment">Support Test & Code in Python</a></p><p>Links:</p><ul><li><a href="https://pythonbytes.fm/episodes/show/250/skorch-your-scikit-learn-together-with-pytorch" title="Python Bytes 250, with Prayson Daniel" rel="nofollow">Python Bytes 250, with Prayson Daniel</a> &mdash; Listen to this for more of an introduction to Prayson</li></ul>', "How to Send MMS in Python Using Plivo's Messaging API", "How to Send MMS in Python Using Plivo's Messaging API", 'How to sort a dictionary in Python', 'As of Python 3.6 dictionaries are ordered (technically the ordering became official in 3.7).', 'When sorting tuples, Python uses lexicographical ordering (which sounds fancier than it is).', 'We don’t usually want to operate on data structures in-place in Python: we tend to prefer making a new data structure rather than re-using an old one (this preference is partly thanks to how variables work in Python).', 'Python’s sorted function accepts a key argument that we can use for this!', 'Then we’d use our key function by passing it to the sorted function (yes functions can be passed to other functions in Python) and pass the result to dict to create a new dictionary:', 'In the rare case that you care about the order of your dictionary’s items, keep in mind that dictionaries are ordered by the insertion order of their keys (as of Python 3.6).', 'Python for Beginners', 'Dataclass in Python', 'Table of ContentsWhat is a dataclass?How to use dataclass in Python?Benefits of using dataclass in PythonConclusion', 'How to use dataclass in Python?', 'Benefits of using dataclass in Python', 'In this article, we have discussed the dataclass decorator in python. We have also implemented it and saw some of its peculiar properties that make it a useful construct to use in our programs. To learn more about python programming, you can read this article on list comprehension. You may also like this article on the linked list in Python.', 'The post Dataclass in Python appeared first on PythonForBeginners.com.', 'Real Python', "Python News: What's New From October 2021?", 'A culmination of great work done by volunteers worldwide, the release of Python 3.10 dominated the Python community’s news cycle in October 2021. At the same time that this release was making new features available, Python got recognition as the top programming language for the month in the TIOBE Programming Community index.', 'There are also some new opportunities for you to support the community by participating in the Python Developer Survey and answering the PyCon US 2022 Call for Proposals.', 'Let’s dive into the biggest Python news from the past month!', 'Free Bonus: Click here to get a Python Cheat Sheet and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions.', 'The Python 3.10 Release', 'New versions of Python are now released annually. We can look forward to the core developers sharing a lovely goody bag with the rest of us every October. With Python 3.10, which came out of beta on October 4th, everyone had something exciting to anticipate.', 'Each release of Python has a release manager who’s responsible for coordinating all changes and for building and preparing the files for distribution. The release manager for Python 3.10 and 3.11 is Pablo Galindo Salgado. In a first for Python, he built and released Python live on YouTube.', 'Python 3.10 Highlights', 'Improved error messages will make your life easier, whether you’re a new Python developer or an experienced one. In particular, the feedback that you get when your code isn’t valid Python is more pointed and actionable in Python 3.10 than in previous versions. As an example, consider the following code, where there’s no closing bracket at the end of the first line:', 'In Python 3.9 and earlier, you’ll see the following if you try to run this code:', '[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]', "If you're interested in reading more about how to build these models and how to get them highly accurate instead of just accurate - read our extensive and detailed Hands-On House Price Prediction - Deep Learning in Python with Keras!", ' Over the years, array computing in Python has evolved to support distributed', 'PyDDF Python Herbst Sprint 2021 (Online)', "The following text is in German, since we're announcing a Python sprint in Düsseldorf, Germany.", 'PyDDF Python Herbst Online Sprint 2021', 'Das Python Meeting Düsseldorf (PyDDF) veranstaltet ein Online Python Sprint Wochenende.', 'PyDDF Python Herbst Sprint 2021', 'Über das Python Meeting Düsseldorf', 'Das Python Meeting Düsseldorf ist eine regelmäßige Veranstaltung in Düsseldorf, die sich an Python Begeisterte aus der Region wendet.Einen guten ersten Überblick über die Vorträge bietet unser PyDDF YouTube-Kanal, auf dem wir Videos der Vorträge nach den Meetings veröffentlichen.', 'The UnicodeDecodeError occurs mainly while importing and reading the csv or json files in your Python code. If the provided file has some special characters, Python will throw an UnicodeDecodeError: ‘utf8’ codec can’t decode byte 0xa5 in position 0: invalid start byte.', 'When importing and reading a csv file, Python tries to convert a byte-array (bytes which it assumes to be a utf-8-encoded string) to a Unicode string (str). It is a decoding process according to\xa0UTF-8 rules. When it tries this, it encounters a byte sequence that is not allowed in utf-8-encoded strings (namely this 0xff at position 0).', "When you call\xa0.decode()\xa0an a\xa0unicode\xa0string, Python 2 tries to be helpful and decides to\xa0encode\xa0the Unicode string back to bytes (using the default encoding), so that you have something that you can really decode. This implicit encoding step\xa0doesn’t\xa0use\xa0errors='replace', so if there are any characters in the Unicode string that aren’t in the default encoding (probably ASCII) you’ll get a\xa0UnicodeEncodeError.", '(Python 3 no longer does this as it is terribly confusing.)', 'Talk Python to Me', "Do you do anything with Jupyter notebooks? If you do, there is a very good chance you're working with the pandas library. This is one of THE primary tools of anyone doing computational work or data exploration with Python. Yet, this library is massive and knowing the idiomatic way to use it can be hard to discover.  ", '<b>Follow Talk Python on Twitter</b>: <a href="https://twitter.com/talkpython" target="_blank" rel="noopener">@talkpython</a><br/>', "<a href='https://talkpython.fm/training'>Talk Python Training</a>", 'Python Bytes', '<p><strong>Brian #2:</strong> <a href="https://lwn.net/SubscriberLink/875441/c29a2006cf489b7f/"><strong>Late-bound argument defaults for Python</strong></a></p>', '<li>At first blush, Angelico\'s idea to fix this "wart" in Python seems fairly straightforward, but the discussion has shown that there are multiple facets to consider. It is not quite as simple as "let\'s add a way to evaluate default arguments when the function is called"—likely how it was seen at the outset. That is often the case when looking at new features for an established language like Python; there is a huge body of code that needs to stay working, but there are also, sometimes conflicting, aspirations for features that could be added. It is a tricky balancing act.</li>', '<li>Pyjion is a JIT for Python based upon CoreCLR</li>', '<li>Requires Python 3.10, .NET Core 6</li>', 'Python⇒Speed', ' #499 – NOVEMBER 16, 2021 View in Browser »     The PSF Is Searching for Its Next Executive Director  After announcing earlier this summer that Ewa Jodlowska is leaving after ten years of service, the PSF has begun its search for the organization’s next Executive Director. Interested? You can apply here. PYTHON SOFTWARE FOUNDATION    Selecting a Programming Language Can Be a Form of Premature Optimization  “Have you ever been told that Python couldn’t be used for a project because it wouldn’t be fast enough? I have, and I find it a bit frustrating as big banks, YouTube, Instagram, and plenty of other places that are performance-sensitive still manage to select Python and be happy.” BRETT CANNON opinion    DataStax Astra DB, Built on Apache Cassandra™ Get 80 Gigabytes of Storage Free Every Month   DataStax Astra DB, built on Cassandra - now made easy in the cloud. Create a free Cassandra database in minutes for global scale on a startup budget. Get 80 gigabytes of storage free every month! Register now → DATASTAX sponsor    Advanced Visual Studio Code for Python Developers  In this tutorial, you’ll learn how you can configure, extend, and optimize Visual Studio Code for a more effective and productive Python development environment. By digging into this customizable code editor and IDE, you’ll put yourself on track to be a VS Code power user. REAL PYTHON    Securely Deploy a Django App With Gunicorn, Nginx, & HTTPS  Ready to take your Django app beyond development? Learn how to securely deploy your Django web app in production over HTTPS with Gunicorn and Nginx. Along the way, you’ll explore how HTTP headers can fortify your app’s security. REAL PYTHON    How Python’s list Data Structure Really Works  This article explores the nuts and bolts of Python list operations, their time complexity, and underlying data structures. ANTON ZHIYANOV • Shared by Anton Zhiyanov    Django Bugfix Release: 3.2.9  DJANGO SOFTWARE FOUNDATION   Python Jobs Senior Backend Software Engineer (Anywhere) Clay Senior Python Engineer (Anywhere) Flashpoint Senior Software Engineer Backend (USA) Tomo Full Stack Software Engineer Django/Postgres/React (Washington D.C., USA) Quorum Senior Software Engineer (Washington D.C., USA) Quorum Python Backend Engineer in Healthcare (Hasselt, Belgium) madewithlove More Python Jobs >>> Articles & Tutorials  The Legacy of OLPC and Charismatic Pitfalls in Teaching Programming  Do you remember the One Laptop Per Child program? What went wrong, and what can we learn from the program’s failure? What are the potential pitfalls of charismatic technology, and how can we avoid them when introducing students to programming? This week on the show, former guest Al Sweigart and author Morgan Ames are here to talk about her book “The Charisma Machine - The Life, Death, and Legacy of One Laptop per Child.” REAL PYTHON podcast    Ruby vs Python Comes Down to the for Loop  “Contrasting how each language handles iteration helps understand how to work effectively in either.” Related discussion of this article on Hacker News. DOUG TURNBULL    Find Out Why Scout’s a Developer’s Best Friend With a Free 14-Day Trial, No Credit Card Needed   Scout uses tracing logic to tie bottlenecks to source code so developers can get back to building great products instead of wasting time fixing performance issues. Real-time alerting gives you the insights you need in 4 min or less! Deploy today and we’ll donate $5 to the OSS project of your choice → SCOUT APM sponsor    Create Distance Matrix Using Google Maps APIs  This article describes step by step how to use the Google Maps Distance Matrix API, how to parse its data to create a distance table and finally, how to store the parsed data in a data base. JUAN ACOSTA • Shared by Juan Acosta    Cython, Rust, and More: Choosing a Language for Python Extensions  You can write Python extensions with Cython, Rust, and many other tools. In this article you’ll learn which one you should use, depending on your particular use case and needs. ITAMAR TURNER-TRAURING    Async Python Is Not Faster  “Async Python is slower than ‘sync’ Python under a realistic benchmark. A bigger worry is that async frameworks go a bit wobbly under load.” CAL PATERSON    Monads and Python  “Porting Monads to Python is a common hobby. But should we really do it?” ROBERT COLLINS    CData Software – The Easiest Way to Connect Python With Data  Simple Python data access to more than 250 cloud applications, and data sources. Connect, Integrate, & Automate your data from Python, or any other application or tool. CDATA SOFTWARE sponsor    Idiomatic Algebraic Data Types in Python With Dataclasses and Union  EDWARD Z. YANG    Infinitely Nested Dictionary  SUSAM PAL    English to German Translation Using Seq2Seq Models in PyTorch  JOHN LUDHI   Projects & Code  pyAirtable: Python Client for the Airtable API  PYAIRTABLE.READTHEDOCS.IO    kuroko: Python Dialect With Explicit Variable Declaration and Block Scoping  GITHUB.COM/KUROKO-LANG    python-mini-projects: Mini Projects to Enhance Your Python Skills  GITHUB.COM/PYTHON-WORLD    Model Bakery: Smart Fixtures for Better Tests  MODEL-BAKERY.READTHEDOCS.IO    s3-credentials: Tool for Creating Credentials for S3 Buckets  SIMONWILLISON.NET   Events  Weekly Real Python Office Hours Q&A (Virtual)  November 15, 2021 REALPYTHON.COM    Women Who Code CONNECT Forward 2021  November 18 to November 20, 2021 WOMENWHOCODE.DEV    PyData Bristol Meetup  November 18, 2021 MEETUP.COM    Python Northwest  November 18, 2021 PYNW.ORG.UK    PyCon APAC 2021  November 19 to November 24, 2021 PYCON.ORG    Xtreme Python  November 24 to November 25, 2021 XTREMEPYTHON.DEV    Happy Pythoning!This was PyCoder’s Weekly Issue #499.View in Browser » ', '[ Subscribe to 🐍 PyCoder’s Weekly 💌 – Get the best Python news, articles, and tutorials delivered to your inbox once a week >> Click here to learn more ]', 'Python ValueError: could not convert string to float', 'If you convert a string object into a floating point in Python, you will get a ValueError: could not convert string to float. Usually, this happens if the string object has an invalid floating value with spaces or comma Python will throw ValueError while parsing into string object into float.', 'Python has a built-in float() method that can parse the string to a floating-point number. This method will be useful when we need to perform a mathematical operation on a string object.', 'If you see the above code, the order value has a comma-separated numeric value, and while parsing into a float, Python will throw ValueError: could not convert string to float.', 'The post Python ValueError: could not convert string to float appeared first on ItsMyCode.', 'Inspired Python', 'Let’s Write a Game Boy Emulator in Python', 'Let’s Write a Game Boy Emulator in Python', 'And in this course I’m going to teach you how to write a Game Boy emulator in Python.', 'Python Pattern Matching Examples: Working with Paths and Files', 'Python Pattern Matching Examples: Working with Paths and Files', 'Manipulating file and path strings is dreary work. It is a common activity, particularly in data science where the file structure may contain important semantic clues like a date or the source of the data. Contextualizing that information is usually done with a mixture of if statements and liberal use of pathlib’s Path or os.path, but the structural pattern matching feature in Python 3.10 is there to cut down on the tedium.', 'Python for Beginners', 'Namedtuple in Python', 'Table of ContentsProblems with tuples and dictionariesWhat is a namedtuple in python?How to create a namedtuple in Python?Benefits of using a namedtuple in PythonHow to modify a namedtuple?Conclusion', 'How to create a namedtuple in Python?', 'Benefits of using a namedtuple in Python', 'In this article, we have discussed about namedtuple in python. We also discussed its use and benefits over tuples and dictionaries. To learn more about python programming, you can read this article on list comprehension. You may also like this article on the linked list in Python.', 'The post Namedtuple in Python appeared first on PythonForBeginners.com.', 'Real Python', "Building Lists With Python's .append()", 'Adding items to a list is a fairly common task in Python, so the language provides a bunch of methods and operators that can help you out with this operation. One of those methods is .append(). With .append(), you can add items to the end of an existing list object. You can also use .append() in a for loop to populate lists programmatically.', '[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]', 'Monads and Python', 'When I wrote this I was going to lead in by saying: I’ve been spending a chunk of time recently thinking about how best to represent Monads in Python. Then I forgot I had this draft for 3 years. So.. I *did* spend a chunk of time. Perhaps it will be of interest anyway… though I had not finished it (otherwise it wouldn’t still be draft would it :))', 'Why wouldn’t you do this? Because you get some baggage. There are two bits in particular. firstly, Monads solve a problem Python doesn’t have. Consider:', 'In Haskell, the compiler is free to run those functions in either order as there is no data dependency between them. In Python, it is not – the order is specified directly by the code. Haskell requires a data dependency to force ordering (and in fact RealWorld in order to distinguish different invocations of IO). So to define a sequence here it defines a new operator (really just an infix function) called bind (>>= in haskell). You then create a function to run after the monad does whatever it needs to do. Whenever you see code like this in Haskell:', 'A direct transliteration into Python is possible a few ways. One of the key things though is to preserve the polymorphism – bind is dependent on the monad instance in use, and\xa0the original code like this can be valid under many instances.', 'If we go back to the Haskell code, it is (mostly) just syntactic sugar, and when desugared starts look to very much like the Python.', 'This style of Python translation would take a monad instance as a parameter and use that to access the type. Note in particular that the behavior of bind is involved at every step here, as it is in the desugared Haskell.', 'This confused me, so I reached out to Chris\xa0and we had a really fascinating chat about it. He pointed me at another way that Haskellers separate out IO for testing. That approach is to create a class specifically for the IO in your code and have two implementations. One production one and one test implementation. In Python:', 'This seems to be a much more direct way to achieve the goal of being able to write pure testable code. And it got me thinking about the actual basic premise of porting monads to Python.', 'The goal is to be able to write Pythonic, pithy code that takes advantage of the behaviour in the bind for that monad. Lets consider Maybe.', 'But we can’t use that unless we start writing our normally straight forward code such that every statement becomes a closure – which we don’t want.. so we want to interfere with the normal process by which Python chooses to run new code.', 'There is a mechanism that Python gives us where we get control over that: generators. While they are often used for concurrency, they can also be used for flow control.', 'The problem is, that its still not regular Python code, and its still somewhat mental gymnastics. Natural for someone thats used to thinking in those patterns, and it works beautiful in Haskell, or Rust, or other languages.', 'There are two fundamental underpinnings behind this for Haskell; type control from context rather than as part of the call signature and do notation which makes code using it look like Python.\xa0 In python we are losing the notation, but gaining the bind operator on the Maybe monad which short circuits Nothing to Nothing across an arbitrary depth of of computation.', 'Python basically is do notation, and if we just had some way of separating out the side effects from the pure code, we’d have pure code. And we have that from above.', 'So there you have it, a three year old mull: perhaps we shouldn’t port Monads to Python at all, and instead just:', 'I think there is room if we wanted to to do a really nice, syntax integrated Monad style facility in Python (and Maybe would be a great reference case for it), but generator overloading – possibly async might let a nicer thing be done but I haven’t investigated that yet.', 'Python Insider', 'Python 3.9.9 hotfix release is now available', 'Get it here: https://www.python.org/downloads/release/python-399/Python 3.9.9 is the eighth maintenance release of the legacy 3.9 series. Python 3.10 is now the latest feature release series of Python 3. Get the latest release of 3.10.x here.', '3.9.9 was released out of schedule as a hotfix for an argparse regression in Python 3.9.8 which caused complex command-line tools to fail recognizing sub-commands properly. Details in BPO-45235. There are only three other bugfixes in this release compared to 3.9.8. See the changelog for details on what changed.', 'Upgrading to 3.9.9 is highly recommended if you’re running Python 3.9.8.', 'The next Python 3.9 maintenance release will be 3.9.10, currently scheduled for 2022-01-03.', 'Real Python', 'To make the most out of this tutorial, you should have an introductory-level understanding of Python, Django, and the high-level mechanics of HTTP requests.', '[ Improve Your Python With 🐍 Python Tricks 💌 – Get a short & sweet Python Trick delivered to your inbox every couple of days. >> Click here to learn more and see examples ]', 'Why did you start using Python?', 'Out of the ashes of a career in finance, I wanted to find a career using skills that I\'ve already used in my undergraduate Business Degree. I was pivoting to being a Business Analyst and while attempting to dip my toe into Data Science, I found PhillyPUG (Philadelphia Python Users Group). DjangoCon US 2016 was held in Philadelphia and I found a network of people who pushed my Python use forward and offered FREE resources. That six-month period was my real "start" in Python.', 'I use JavaScript daily. No language shaming here, but Python will always be that girl in my book.', "Outside of my 9-5, I'm the founder of At The Root (https://AtTheRoot.dev) which is home to the first and only AntiRacist Ethical Source License. We're working in partnership with the Organization for Ethical Source (https://EthicalSource.dev) to propel the first draft of our License forward. Code-wise, we’re currently developing the At The Root Forum and Checklist, a place where subject matter experts can give actionable suggestions on how to help your project be actively anti racist -- things like requiring a block button on social platforms, or conclusions drawn from collecting gender, or access and consent when collecting biometric data. The forum is built in Gatsby/React and Wagtail/Django/Python and we're looking for both code and content contributors. If someone is interested in either, please email contact@AtTheRoot.dev.", 'Which Python libraries are your favorite (core or 3rd party)?', "Most of my top picks are going to be libraries supporting Wagtail and Django! It will be hard to pick, but Django Rest Framework must be one of my top. Factory Boy, CookieCutter, and Black Python formatter are big ones I've been using a lot lately. I'm very excited to cut my teeth on Rich and htmx. I've heard great things.", 'The post PyDev of the Week: Dawn Wages appeared first on Mouse Vs Python.', 'Other Python Planets', 'Python Summer of Code', 'Planet Python Francophone', 'Planet Python Argentina', 'Planet Python Brasil', 'Planet Python Poland', 'Python Libraries', 'Python/Web Planets', '"Speno\'s Pythonic Avocado"', 'Awesome Python Applications', 'BioPython News', 'DaPythonista', 'Daily Tech Video (Python)', 'Dallas Fort Worth Pythoneers', 'Doing Math with Python', 'EuroPython', 'EuroPython Society', 'From Python Import Podcast', 'Full Stack Python', 'Import Python', 'Inspired Python', 'IronPython-URLs', 'Just a little Python', 'Montreal Python User Group', 'Omaha Python Users Group', 'Python 4 Kids', 'Python 411 Podcast', 'Python Advocacy', 'Python Anywhere', 'Python Bytes', 'Python Celery - Weekly Celery Tutorials and How-tos', 'Python Circle', 'Python Data', 'Python Diary', 'Python Does What?!', 'Python Engineering at Microsoft', 'Python GUIs', 'Python Insider', 'Python Morsels', 'Python Piedmont Triad User Group', 'Python Pool', 'Python Software Foundation', 'Python Sweetness', 'Python User Groups', 'Python for Beginners', 'Python on Karan', 'Python with Myo', 'Python(x,y) News', 'PythonClub - A Brazilian collaborative blog about Python', 'PythonDebugging.com', 'Pythonicity', 'Pythonology', 'Python⇒Speed', 'Real Python', 'Talk Python to Me', 'TechBeamers Python', 'The Python Coding Blog', 'The Python Papers', 'Weekly Python Chat', 'Weekly Python StackOverflow Report']
['Python Software Foundation News', '\xa0\xa0News from the Python Software Foundation', 'Humphrey Butau, web developer, PSF fellow, and PyCon Zimbabwe co-founder was awarded the Python Software Foundation 2020 Q4 Community Service Award.RESOLVED that the Python Software Foundation award the Q4 2020 Community Service Award to Humphrey Butau. Humphrey is the co-founder of PyCon Zimbabwe and was an early member of the Python community in Harare, Zimbabwe. He is a PSF fellow and has been stewarding our local community for a number of years. Humphrey is also a great speaker and has given talks at many conferences including keynoting DjangoCon Europe, speaking at PyCon Namibia and PyCon Italia.We interviewed Humphrey to learn more about his inspiration and work with the Python community. We also asked Anna Makarudze, a close associate of Humphrey, to share more light about Humphrey\'s community efforts and impact on the community.The Origin StoryWhat was your earliest memory of how you got into tech?\xa0I got into tech as an IT Help Desk Support and Technician. While doing this job, I started to learn Visual Basic for building applications on my own.\xa0A friend of mine later introduced me to Python in 2010, and I continued to teach myself programming.I later gave up as I didn\'t manage to make headway since I was doing these things on my own, and there were no other peers from whom I could get help if I got stuck.It was only in 2015 when I got a scholarship for an online Python and Django course with Treehouse that my coding journey continued in earnest.What was your earliest involvement with the Python community?In 2016 Anna Makarudze and I applied for and got financial assistance to attend PyCon Namibia in Windhoek. Although the financial aid was not enough to cover all our expenses if we took a flight to Namibia, we overlooked all that and took the alternative of a bus ride of 30 hours from Harare, Zimbabwe, to Windhoek, Namibia.Attending PyCon Namibia was more important for the Python community and us in Zimbabwe at the time. It was an opportunity to learn from the international Python community.We attended the conference, learned a lot, and met key people active in the global Python community. I am forever grateful to the organizers of PyCon Namibia 2016 as I believe it sparked the "Python revolution" in Africa, with PyCons in Ghana, Nigeria, Zimbabwe, and the first PyCon Africa Conference.The people as a source of inspirationWhat drives and inspires you to volunteer your time and resources to the PyCon Zimbabwe and the wider Python community?It is the people!What motivates me is what comes out of meeting people who share the same interests as me. The conferences, workshops, activities, and events are a huge platform for sharing information and building oneself career-wise.It is also heartwarming to hear people mention that their attendance at a Django Girls workshop encouraged them to pursue a career in programming.How has your involvement within the Python community helped your career?By being a member of the Python community, I have discovered so many possibilities that I might have never realized. I have learned a lot from the events that I have attended, and this has helped me have a clear picture of various roles that I can pursue.In 2019, I landed my first role as a software developer. I am sure this was possible through my involvement in the Python community.Coming from being a hobbyist programmer without Computer Science, my employer was willing to hire and mentor me.How has Covid affected your work with the Python community, and what steps are you taking to push the community forward during these trying times?Before March 2020, we were already facing challenges as a Python community in Zimbabwe.Covid-19 came and poured cold water on the steps that we were already taking to address these challenges. For the past one and half years, we put aside plans to hold in-person events as we put the health and well-being of members of our Python community first.We are currently discussing plans for holding virtual events and the improvement of the Covid-19 situation in Zimbabwe. We hope to get back to hybrid events in 2022.Impact story by Anna MakarudzeAs early as 2015, Humphrey had the vision to start a Python community in Zimbabwe to raise awareness for Python, a relatively new programming language in Zimbabwe.It is because of Humphrey\'s leadership that we were able to bring PyCon to Zimbabwe.Many of our community members, including myself, are working remotely due to Humphrey\'s work.I also got involved in community work like speaking at DjangoCon Europe and DjangoCon US, running PyLadies Harare for a few years, and becoming Django Software Foundation president because of Humphrey\'s work.There is no doubt that many of us in Zimbabwe are in the global Python/Django community because of Humphrey\'s vision of starting a community in Zimbabwe.The Python Software Foundation congratulates and celebrates Humphrey Butau.', "Summary: The PSF launched its end-of-the-year fundraiser. There are two ways to donate: 1. donate directly to the PSF or 2. purchase a discounted PyCharm license, with all proceeds going to the PSF. Contributing to the PSF financially helps sustain programs that support the larger Python community.2021 is flying by! Regardless, the PSF made the best of this year by launching two critical initiatives thanks to Google's sponsorship and Bloomberg's grant. We're super happy to now support Python core development and Python Packaging in new ways:\xa0Core Development: In July 2021, the PSF hired its inaugural Developer-in-Residence, Łukasz Langa. Łukasz works full-time (one year term) to assist CPython maintainers and the Python Steering Council. Areas of responsibility include analytical research to understand the project's volunteer hours, investigating project priorities and tasks as we advance, and working on those priorities.\xa0Packaging: In August 2021, the PSF hired its first-ever Python Packaging Project Manager, Shamika Mohanan. Shamika is performing outreach to Python users to help the PSF better understand the landscape, identify fundable initiatives, seek grants, oversee funded projects, and report on their progress and results to improve Python packaging for all users.To continue the above initiatives, the PSF will need to generate USD 325,000 per year. To hire additional folks for either initiative (in demand), the PSF will need USD 500,000+ per year. The amount of funding required is in addition to funding needed to maintain PyCon US, our fiscal sponsor program, several working groups, an international grants program, a healthy financial reserve, and a growing staff to operate the PSF. Even if donations are a portion of the PSF's revenue, every dollar makes an impact and allows the PSF financial stability to continue supporting a growing community!Contributing to the PSF helps sustain programs that support the larger Python community. Donate today! \xa0Donate directly to the PSF\xa0or purchase a discounted PyCharm license, with all proceeds going to the PSF.", 'The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.', 'Python Software Foundation', 'The Python Software Foundation is searching for it...']
["With PyCon US 2022 planning underway, we are excited to be launching the conference website along with our sponsorship program. Our team is planning to host the event in person with an online component. Head over to the PyCon US 2022  website for details about the conference and more information about our sponsorship program. You will not want to miss the opportunity to be part of this event! If your organization depends on the Python ecosystem, check out our prospectus online, and sign up today ! \xa0 The PSF's comprehensive sponsorship program allows organizations to support community programs financially and delivers a variety of benefits that provide visibility across PyCon US, pypi.org, python.org, and much more:\xa0  Outreach & Networking:  Access to 2,000+ attendees interested in your products and services to generate qualified leads. Recruiting : Access to qualified job candidates. If you’re hiring, there’s no better place to find Python developers than PyCon US. Marketing : ", 'Want to play a pivotal role in the planning and success of PyCon US? Here’s your chance! Join our team by volunteering for one of our Call for Proposal Committees. We are looking for motivated volunteers who want to contribute their time and knowledge to make this year’s conference a great success. As a committee member, you’ll have the opportunity to be part of the PyCon US staff team, meet and work with organizers, volunteers, and speakers, and share your diverse skillset with the Python community. PyCon US is seeking volunteers of all experience levels and backgrounds to join our Program, Tutorial, and Posters Committees. Learn more about each committee and where to submit your application on the PSF website . Thank you for considering this opportunity. PyCon US would not be a success without the support of community members like you!\xa0\xa0', 'The PyCon US 2021 recordings are available on our YouTube channel .\xa0\xa0Be sure to subscribe to our channel for notifications of new content. This channel will be used for all future conferences in order to keep all content in one channel. The recordings are synced with the available live captions taken during the event. There are some tutorials whose files did not align with the recordings for many unforeseen reasons. Please utilize the closed captions offered on YouTube for those without the caption files synced.\xa0 There are three tutorials that needs some fine tuning and will be available next week:     Introduction to Decorators: Power UP Your Python Code / Geir Arne Hjelle Effective Data Visualization / Husni Almoubayyed A Hands-On Introduction to Multi-Objective Optimisation / Eyal Kazin We can not mention enough times our heartfelt gratitude to all the presenters of the tutorials, talks, keynote addresses, posters, workshops, summits and lightning talks for their time and efforts in', 'Python', 'This is the blog of PyCon US, with guest contributions from Python conferences everywhere!', 'EuroPython in Europe', 'Python Brasil in Brazil', 'Python DE in Germany', 'Python FI in Finland', 'Python IE in Ireland', 'Python UA in Ukraine', 'Copyright © 2009–2021 Python Software Foundation']
['PythonEventsCalendar - Python Wiki', 'PythonEventsCalendar', 'PythonEventsCalendar', 'FrontPageRecentChangesFindPageHelpContentsPythonEventsCalendar', 'Python Events Calendar', "The Python events calendar is a combination of Google calendars maintained by the Python Calendar Team and published on the following sites: http://www.python.org/ (in the events box on the front page and on the events calendar pages) http://www.pycon.org/ (calendar widget under the conference listing) https://twitter.com/PythonEvents (@PythonEvents) http://legacy.python.org/ (in the side bar on the left of all pages) As of January 2020, we have more then 520 events listed and the calendars are proving to be a really useful resource for the Python community. The events are also listed on a map mashup created by Luis Miguel Morillas: http://lmorillas.github.io/python_events/ Here's a snapshot showing all events from Jan 2012 - March 2016:   Contents", 'Python Events Calendar', 'Python Calendar Team', ' * focus on Python: ', ' * HTML link using the format <a href="http://url/">name of the event</a>: Please mention: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) the location (venue address, including city and country) the dates/times (including the time zone) a link with more details for the event (using HTML format "<a\xa0href="http://url/">name\xa0of\xa0the\xa0event</a>"); URL shorteners are not permitted. For recurring events, please also include the recurrence information, e.g. "monthly, every second Thursday". Notes: For online events, please use "Online Event" as location. For training sessions, courses, webinars and similar type of events, please post your event on the PythonTraining page. We currently do not have a calendar for these.  Please leave at least 4 weeks notice when submitting events. The calendar team is volunteer driven. While we try to add new events swiftly, we cannot guarantee response times. ', 'In some cases, the email format may not be suitable, e.g. if you want to submit several larger events in one go. For those cases, please list the events in the email sent to events@python.org, including the following details: the name of the event (including the user group name for user group events) type of event (conference, bar camp, sprint, user group meeting, etc.) focus on Python and approximate size (number of attendees) optional: a link with more details for the event for each event, or as summary, so that we can tell which type of event you want entered and whether they are suitable for our calendars. Please attach the event data as iCal file events.ics using the following entry format: title: name\xa0of\xa0the\xa0event start and end dates: start day and end day of the event, entered as "all day events" for larger events, or as start and end date and time in the local timezone for smaller single day events location: city,\xa0[state,]\xa0country description: <a\xa0href="http://url/">name\xa0of\xa0the\xa0event</a> The same notes as above apply to bulk submissions. ', 'Python Events Calendar - mostly meant for conferences and larger local events Calendar ID: j7gov1cmnqr9tvg14k621j7t5c@group.calendar.google.com Python User Group Calendar - meant for user group events and other smaller local events Calendar ID: 3haig2m9msslkpf2tn1h56nn9g@group.calendar.google.com Both calendars combined - in a single calendar widget ', 'Python Events Calendar Python User Group Calendar ', 'Note: Google has switched off calendar RSS feeds on Nov 18 2015, so these links no longer work. Python Events Calendar Python User Group Calendar ', '@PythonEvents This Twitter account automatically gets all new entries from both calendars as tweets. The triggering is setup using IFTTT. Note that changes to the calendar entries are not reported on the Twitter feed. This appears to be a limitation of the IFTTT trigger. ', 'Python Calendar Team', "Events have to have some focus on Python: The event should either target Python, a project written in Python, or showcase Python in some form. Examples are Python conferences, conferences which have a Python track or tutorial, conferences at which Python is presented in some form. The same goes for conferences which target a project written mostly in Python (e.g. Plone, Django, OpenStack, etc.) and for other events such as sprints. The calendars should only list the events themselves. CFP deadlines, registration openings or similar announcements should not be listed in the calendars. For online events, such as PyWeek game jams, only a reasonably short events (no longer than two weeks) should be added as single event. For longer events, it's better to just add the start and end date as separate events to the calendar. The same criteria for calendars apply to online events as well. Please add these using Online\xa0Event as location. Training events, conferences which don't have a strong Python focus or offer a decent sized Python track, should not be listed on the calendars. ", 'Python Events Calendar: This calendar should only receive entries for conferences of at least around 100 attendees, which at least around a 3rd non-local attendees. Smaller events with at least around 30 attendees such as sprints, barcamps, PyDays or smaller unconferences may also be added to this calendar if they are scheduled as separate event, will have a significant impact and reach out to larger regions. Examples: PyCon conferences, OSCON, Django conferences, Plone conference, Need-for-speed sprints, Python BarCamps/Unconferences/etc. Python User Group Calendar: This calendar is meant for user group activities which are open to Python people from outside the group (new prospective members and visitors from out of town). It is not meant for user group internal events. Examples: monthly local user group meetings, project sprints that are open for non-group members, workshops organized by user groups, Django Girls events. ', '  <a href="https://www.google.com/calendar/ical/j7gov1cmnqr9tvg14k621j7t5c%40group.calendar.google.com/public/basic.ics">Python Events iCal Calendar</a><br/>', '  <a href="https://www.google.com/calendar/ical/3haig2m9msslkpf2tn1h56nn9g%40group.calendar.google.com/public/basic.ics">Python User Group iCal Calendar</a>', 'Google Calendar API v2 Atom Reference. This describes the available RSS feed options available on the Google calendar feed links. PythonEventsCalendar  (last edited 2021-03-25 11:14:19 by MarcAndreLemburg)', 'MoinMoin PoweredPython PoweredGPL licensedValid HTML 4.01']
["Python Developer's Guide", "Python Developer's Guide ", "Python Developer's Guide ", 'Documenting Python', 'Following Python’s Development', 'Porting Python to a new platform', 'Changing the Python Language', 'Exploring CPython’s Internals', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Changing Python’s C API', 'Python Developer’s Guide¶', 'to Python – for both new and experienced contributors. It is', 'community that maintains Python.  We welcome your contributions to Python!', 'Fork the CPython repository', 'Build Python, on UNIX and Mac OS use:', 'contributing to Python:', 'PEPs (Python Enhancement Proposals)', 'Status of Python branches¶', 'The main branch is currently the future Python 3.11, and is the only', 'branch that accepts new features.  The latest release for each Python', 'but can be adjusted by the release manager of each branch.  All Python 2', 'We encourage everyone to contribute to Python and that’s why we have put up this', 'this guide, then the Core Python Mentorship group is available to help guide new', 'A number of individuals from the Python community have contributed to a series', 'Guide for contributing to Python:', 'Documenting Python', 'Following Python’s Development', 'contributors will build understanding of the CPython workflow by reading the', 'Proposing changes to Python itself¶', 'Improving Python’s code, documentation and tests are ongoing tasks that are', 'never going to be “finished”, as Python operates as part of an ever-evolving', 'necessary maintenance activities is finding ways to make Python, in the form of', 'Changing the Python Language', 'This guide is specifically for contributing to the Python reference interpreter,', 'also known as CPython (while most of the standard library is written in Python,', 'There are other Python implementations, each with a different focus.  Like', 'CPython, they always have more things they would like to do than they have', 'PyPy: A Python interpreter focused on high speed (JIT-compiled) operation', 'Jython: A Python interpreter focused on good integration with the Java', 'IronPython: A Python interpreter focused on good integration with the', 'Stackless: A Python interpreter focused on providing lightweight', 'microthreads while remaining largely compatible with CPython specific', 'PEP 8 (Style Guide for Python Code)', 'PEPs (Python Enhancement Proposals)', 'Exploring CPython’s Internals', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Python Software Foundation-supported', 'which includes all infrastructure used in the development of Python itself', 'Python Documentation', 'Documenting Python', 'Python triage team', 'Becoming a member of the Python triage team', 'Following Python’s Development', 'Porting Python to a new platform', 'Updating NEWS and What’s New in Python', 'Changing the Python Language', 'Exploring CPython’s Internals', 'CPython Source Code Layout', 'Changing CPython’s Grammar', 'Guide to CPython’s Parser', 'Design of CPython’s Compiler', 'Design of CPython’s Garbage Collector', 'Changing Python’s C API', 'Python Build Setup', 'Building Python', 'Forking CPython GitHub Repository', 'Cloning a Forked CPython Repository', 'Updating your CPython Fork', 'Documenting Python and style guide', '              Copyright © 2011-2021, Python Software Foundation |', 'Python Developer’s Guide', 'Status of Python branches', 'Proposing changes to Python itself']
['   - Python tracker', 'Python Home', 'Incorrect line numbers in GDB Python backtraces [3.9]', 'Python does not support standalone MSVC v143 (VS 2022) Build Tools', 'Remove the usage of the C stack in Python to Python calls', 'Python execution broken after update via Windows Store', 'Many method parameters in the datetime module are positional-only in the C implementation but positional-or-keyword in the Python implementation', 'Further speed up Python-to-Python calls.', '  Supported by The Python Software Foundation,', 'Copyright © 1990-2020, Python Software Foundation']
['Python-Dev python-dev@python.org', 'Python core developers', "Do not post general Python questions to this list.  For help with Python please see the Python help page. On this list the key Python developers discuss the future of the language and its implementation.  Topics include Python design issues, release mechanics, and maintenance of existing releases. More information on Python's development process can be found in the Python Developer's Guide."]
['RE: Python 3.10.0 Something completely different', 'Setup Failed Python Download', 'Remove "This version of Python can\'t be used on Windows 7 or later"', 'Outdated instructions for Vim for Python', 'Replace hardcoded Python Software Foundation sponsor logo placements with EthicalAds', 'Python']
['Python Infrastructure Status', 'Python Infrastructure', '              Get email notifications whenever Python Infrastructure creates,  updates or resolves an incident.', '                Get text message notifications whenever Python Infrastructure creates or resolves an incident.', '              Get webhook notifications whenever Python Infrastructure creates an incident, updates an incident, resolves an incident or changes a component status.', 'Follow @PythonStatus', "          Subscribe to updates for PyPI XMLRPC Search Disabled via email and/or text message. You'll receive email notifications when incidents are updated, and text message notifications whenever Python Infrastructure creates or resolves an incident."]
